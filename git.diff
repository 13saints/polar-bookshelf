diff --git a/README.md b/README.md
index 8740a5a5d..c8faa19dd 100644
--- a/README.md
+++ b/README.md
@@ -33,10 +33,7 @@
 
 Polar is personal knowledge repository which supports advanced
 features like incremental reading, annotation, comments, and spaced repetition. 
-It supports reading PDF and the web content and was created using the [Electron
-framework](https://electron.atom.io) and
-[PDF.js](https://mozilla.github.io/pdf.js)
-
+It supports reading PDF, EPUB, and the web content.
 </div>
 
 # Features
@@ -44,6 +41,8 @@ framework](https://electron.atom.io) and
 - **PDF support** We have first-class PDF support thanks to <a href="https://mozilla.github.io/pdf.js/">PDF.js</a>.  PDFs work well when reading content in book format or when reading scientific
 research which is often stored as PDF.
 
+- **EPUB support** Add any EPUB and we also capture web content to EPUB/
+
 - **Captured Web Pages** Download HTML content and save them as offline documents which can be annotated.
 
 - **Pagemarks** Easily keep track of what you're reading and the progress of each document.
@@ -52,10 +51,6 @@ research which is often stored as PDF.
 
 - **Area Highlights** Capture a region of the page as a highlight which can be a chart, figure, infographic, etc.  
 
-- **Local Storage** All content is stored locally. 
-
-- **Standards Based** All content is stored as JSON in a well documented schema.  Annotations never mutate the original content.
-
 - **Portable** Run across any platform. ```Linux```, ```MacOS```, and ```Windows``` supported. 
 
 # [Downloads](https://getpolarized.io/download.html)
@@ -72,87 +67,6 @@ Polar.
 
 If it's a very technical issue it might be best to [create a Github Issue](https://github.com/burtonator/polar-bookshelf/issues/new). 
 
-# Personal Knowledge Repository
-
-Polar is a document manager for PDF and web content as well as a personal
-knowledge repository.
-
-Polar allows you to keep all important reading material in one place including
-annotations and flashcards for spaced repetition.
-
-It supports for features like pagemarks, text highlights, and progress tracking
-by keeping track of how much you've read including restoring pagemarks when you
-re-open documents.
-
-Pagemarks are a new concept for tracking your reading inspired from [incremental
-reading](https://getpolarized.io/incremental-reading.html).  They allow suspend
-and resume of reading for weeks and months in the future until you're ready to
-resume, without losing your place.
-
-Since you can create multiple pagemarks they work even if you jump around in a
-book (which is often in technical or research work).
-
-# Web Content
-
-PDF is an excellent document format but we've found that many HTML pages don't
-convert to PDF well since they were not intended to be printed.
-
-# Text Highlights
-
-![Text Highlight](https://raw.githubusercontent.com/burtonator/polar-bookshelf/master/docs/screenshots/text-highlight-shadow.png)
-
-Text highlights allow you to work with content like you're using a text
-highlighter in a book.
-
-# Area Highlights
-
-![Area Highlight](https://raw.githubusercontent.com/burtonator/polar-bookshelf/master/docs/screenshots/area-highlight-shadow.png)
-
-Area highlights allow you highlight a figure, infographic, or anything visual 
-in a document. 
-
-## Create an area highlight.
-
-Right click on a page and select "Create area highlight"
-
-## Delete an highlight.
-
-Right click the highlight and select delete.
-
-# Flashcards
-
-![Flashcards](https://raw.githubusercontent.com/burtonator/polar-bookshelf/master/docs/screenshots/flashcard2-shadow.png)
-
-Flashcards allow you to retain information long term by using a spaced repetition 
-system like Anki to continually re-train yourself on material you want to retain.
-
-Flashcards can be created by right clicking an annotation and selecting 
-"Create Flashcard".  The resulting flashcards are stored as annotations in your 
-repository.
-
-To specify the Anki deck for a document, add a tag starting with `deck:`.  Slashes are used to specify subdecks.
-For instance, to set a document to the Anki deck ML::100PageMLBook, use the Polar tag `deck:ML/100PageMLBook`.
-
-## Build from source
-
-Install NodeJS and npm for your platform.
-
-### To run:
-
-Install latest **stable** node and npm versions.
-
-You can check which version you need at 
-
-https://nodejs.org/
-
-... then run: 
-
-```
-$ git clone https://github.com/burtonator/polar-bookshelf
-$ cd polar-bookshelf
-$ npm install && npm run-script compile && npm start
-```
-
 ## Contributors
 
 This project exists thanks to all the people who contribute. <img src="https://opencollective.com/polar-bookshelf/contributors.svg?width=890&button=false" />
diff --git a/apps/dev2/App.tsx b/apps/dev2/App.tsx
index 8858ec653..2720e54d9 100644
--- a/apps/dev2/App.tsx
+++ b/apps/dev2/App.tsx
@@ -3,6 +3,10 @@ import {EPUBContextMenuRoot} from '../doc/src/renderers/epub/contextmenu/EPUBCon
 import {Resizable} from "../../web/js/ui/resizable/Resizable";
 import {UploadProgressDialog} from "../../web/js/ui/dialogs/UploadProgressDialog";
 import {MUIAppRoot} from "../../web/js/mui/MUIAppRoot";
+import {TwoMigrationDialog} from "../repository/js/gateways/two_migration/TwoMigrationDialog";
+import {NULL_FUNCTION} from "polar-shared/src/util/Functions";
+import {MobileGateway} from "../repository/js/gateways/mobile/MobileGateway";
+import {TwoMigrationForBrowser} from "../repository/js/gateways/two_migration/TwoMigrationForBrowser";
 
 const IFrameContent = React.memo(() => {
 
@@ -37,35 +41,42 @@ const IFrameContent = React.memo(() => {
 export const App = () => (
     <MUIAppRoot>
 
-        <div style={{height: '1200px', position: 'absolute'}}>
-
-            <div style={{
-                     position: "absolute",
-                     top: '100px',
-                     left: '100px',
-                     width: '800px',
-                     height: '1000px',
-                     marginLeft: 'auto',
-                     marginRight: 'auto',
-                     backgroundColor: 'orange',
-                     // position: 'relative'
-                 }}>
-
-                <Resizable computeInitialPosition={() => ({
-                               top: 0,
-                               left: 0,
-                               width: 100,
-                               height: 100
-                           })}
-                           bounds="parent"
-                           color="rgb(255, 0, 0)"/>
+        {/*<div style={{height: '1200px', position: 'absolute'}}>*/}
 
+        {/*    <div style={{*/}
+        {/*             position: "absolute",*/}
+        {/*             top: '100px',*/}
+        {/*             left: '100px',*/}
+        {/*             width: '800px',*/}
+        {/*             height: '1000px',*/}
+        {/*             marginLeft: 'auto',*/}
+        {/*             marginRight: 'auto',*/}
+        {/*             backgroundColor: 'orange',*/}
+        {/*             // position: 'relative'*/}
+        {/*         }}>*/}
 
-            </div>
+        {/*        <Resizable computeInitialPosition={() => ({*/}
+        {/*                       top: 0,*/}
+        {/*                       left: 0,*/}
+        {/*                       width: 100,*/}
+        {/*                       height: 100*/}
+        {/*                   })}*/}
+        {/*                   bounds="parent"*/}
+        {/*                   color="rgb(255, 0, 0)"/>*/}
 
-            {/*<UploadProgressDialog value='indeterminate'/>*/}
 
-        </div>
+        {/*    </div>*/}
+
+        {/*    /!*<UploadProgressDialog value='indeterminate'/>*!/*/}
+
+        {/*</div>*/}
+
+        {/*<TwoMigrationDialog onClose={NULL_FUNCTION}/>*/}
+        <TwoMigrationForBrowser>
+            <div>
+                this is the real content
+            </div>
+        </TwoMigrationForBrowser>
 
     </MUIAppRoot>
 );
diff --git a/apps/repository/js/ChromeExtensionInstallButton.tsx b/apps/repository/js/ChromeExtensionInstallButton.tsx
index 190da349c..24e204998 100644
--- a/apps/repository/js/ChromeExtensionInstallButton.tsx
+++ b/apps/repository/js/ChromeExtensionInstallButton.tsx
@@ -3,7 +3,6 @@ import {deepMemo} from "../../../web/js/react/ReactUtils";
 import {Analytics} from "../../../web/js/analytics/Analytics";
 import {useNav} from "../../../web/js/ui/util/NavHook";
 import {AppRuntime} from 'polar-shared/src/util/AppRuntime';
-import {Platforms} from 'polar-shared/src/util/Platforms';
 import {Browsers} from "polar-browsers/src/Browsers";
 import Button from '@material-ui/core/Button';
 import {FAChromeIcon} from "../../../web/js/mui/MUIFontAwesome";
@@ -12,6 +11,7 @@ import {WebExtensionPresenceClient} from "polar-web-extension-api/src/WebExtensi
 import {useComponentDidMount} from "../../../web/js/hooks/ReactLifecycleHooks";
 import {isPresent} from "polar-shared/src/Preconditions";
 import {ChromeStoreURLs} from "polar-web-extension-api/src/ChromeStoreURLs";
+import {MUITooltip} from "../../../web/js/mui/MUITooltip";
 
 export function useWebExtensionInstalled() {
 
@@ -92,15 +92,17 @@ export const ChromeExtensionInstallButton = deepMemo(() => {
 
     return (
 
-        <Button onClick={() => onClick()}
-                variant="contained"
-                startIcon={<FAChromeIcon/>}
-                size="medium"
-                color="default">
+        <MUITooltip title="Install our web extension to enable all features including web capture.">
+            <Button onClick={() => onClick()}
+                    variant="contained"
+                    startIcon={<FAChromeIcon/>}
+                    size="medium"
+                    color="default">
 
-            Install Chrome Extension
+                Install Chrome Extension
 
-        </Button>
+            </Button>
+        </MUITooltip>
 
     );
 
diff --git a/apps/repository/js/annotation_repo/AnnotationInlineControlBar.tsx b/apps/repository/js/annotation_repo/AnnotationInlineControlBar.tsx
index 5294ab02d..d56df5f7e 100644
--- a/apps/repository/js/annotation_repo/AnnotationInlineControlBar.tsx
+++ b/apps/repository/js/annotation_repo/AnnotationInlineControlBar.tsx
@@ -7,6 +7,7 @@ import Divider from "@material-ui/core/Divider";
 import {MUIButtonBar} from "../../../../web/js/mui/MUIButtonBar";
 import Tooltip from '@material-ui/core/Tooltip';
 import {deepMemo} from "../../../../web/js/react/ReactUtils";
+import {MUITooltip} from "../../../../web/js/mui/MUITooltip";
 
 interface IProps {
     readonly annotation: IDocAnnotation;
@@ -39,11 +40,11 @@ export const AnnotationInlineControlBar = deepMemo((props : IProps) => {
                                   flexGrow: 1,
                                   justifyContent: "flex-end"
                               }}>
-                    <Tooltip title="Open document">
+                    <MUITooltip title="Open document">
                         <IconButton onClick={() => callbacks.doOpen(annotation?.docInfo!)}>
                             <OpenInNewIcon/>
                         </IconButton>
-                    </Tooltip>
+                    </MUITooltip>
                 </MUIButtonBar>
 
             </div>
diff --git a/apps/repository/js/annotation_repo/AnnotationRepoScreen2.tsx b/apps/repository/js/annotation_repo/AnnotationRepoScreen2.tsx
index a37f2e66f..60e8e160e 100644
--- a/apps/repository/js/annotation_repo/AnnotationRepoScreen2.tsx
+++ b/apps/repository/js/annotation_repo/AnnotationRepoScreen2.tsx
@@ -13,6 +13,7 @@ import {AnnotationInlineViewer2} from "./AnnotationInlineViewer2";
 import {StartReviewDropdown} from "./filter_bar/StartReviewDropdown";
 import {AnnotationRepoRoutedComponents} from './AnnotationRepoRoutedComponents';
 import {StartReviewSpeedDial} from './StartReviewSpeedDial';
+import {FeedbackButton} from "../ui/FeedbackButton";
 
 namespace main {
 
@@ -176,6 +177,8 @@ namespace screen {
             <AnnotationRepoRoutedComponents/>
             <main.Desktop />
 
+            <FeedbackButton/>
+
             <RepoFooter/>
 
         </FixedNav>
diff --git a/apps/repository/js/doc_repo/DocRepoFilterBar.tsx b/apps/repository/js/doc_repo/DocRepoFilterBar.tsx
index d3013e055..3c25cedb3 100644
--- a/apps/repository/js/doc_repo/DocRepoFilterBar.tsx
+++ b/apps/repository/js/doc_repo/DocRepoFilterBar.tsx
@@ -4,7 +4,6 @@ import FlagIcon from '@material-ui/icons/Flag';
 import Grid from "@material-ui/core/Grid";
 import {MUISearchBox2} from "../../../../web/js/mui/MUISearchBox2";
 import {useDocRepoCallbacks, useDocRepoStore} from "./DocRepoStore2";
-import Tooltip from '@material-ui/core/Tooltip';
 import {deepMemo} from "../../../../web/js/react/ReactUtils";
 
 export interface IProps {
@@ -47,24 +46,23 @@ export const DocRepoFilterBar = deepMemo((props: IProps) => {
                   alignItems="center">
 
                 <Grid item>
-                    <Tooltip title="Hide/show flaged documents">
-                        <MUIToggleButton id="toggle-flagged"
-                                         size="medium"
-                                         label="flagged"
-                                         icon={<FlagIcon/>}
-                                         initialValue={filters.flagged}
-                                         onChange={value => setFilters({...filters, flagged: value})}/>
-                    </Tooltip>
+
+                    <MUIToggleButton id="toggle-flagged"
+                                     tooltip="Show only flagged documents."
+                                     size="medium"
+                                     label="flagged"
+                                     icon={<FlagIcon/>}
+                                     initialValue={filters.flagged}
+                                     onChange={value => setFilters({...filters, flagged: value})}/>
                 </Grid>
 
                 <Grid item>
-                    <Tooltip title="Hide/show archived documents">
-                        <MUIToggleButton id="toggle-archived"
-                                         size="medium"
-                                         label="archived"
-                                         initialValue={filters.archived}
-                                         onChange={value => setFilters({...filters, archived: value})}/>
-                    </Tooltip>
+                    <MUIToggleButton id="toggle-archived"
+                                     tooltip="Toggle showing archived documents"
+                                     size="medium"
+                                     label="archived"
+                                     initialValue={filters.archived}
+                                     onChange={value => setFilters({...filters, archived: value})}/>
                 </Grid>
 
                 <Grid item>
@@ -78,78 +76,6 @@ export const DocRepoFilterBar = deepMemo((props: IProps) => {
 
             </Grid>
 
-            {/*<div className="mr-2"*/}
-            {/*     style={{whiteSpace: 'nowrap', marginTop: 'auto', marginBottom: 'auto'}}>*/}
-
-            {/*    <div className="checkbox-group">*/}
-
-            {/*        <SimpleTooltipEx text="Only show flagged documents.">*/}
-
-            {/*            <ToggleButton id="toggle-flagged"*/}
-            {/*                          size="md"*/}
-            {/*                          label="flagged"*/}
-            {/*                          iconClassName="fas fa-flag"*/}
-            {/*                          initialValue={false}*/}
-            {/*                          onChange={value => this.props.onToggleFlaggedOnly(value)}/>*/}
-
-            {/*        </SimpleTooltipEx>*/}
-
-            {/*    </div>*/}
-
-            {/*</div>*/}
-
-            {/*<div className="header-filter-box mr-1"*/}
-            {/*     style={{whiteSpace: 'nowrap', marginTop: 'auto', marginBottom: 'auto'}}>*/}
-
-            {/*    <div className="checkbox-group">*/}
-
-            {/*        <SimpleTooltipEx text={`*/}
-            {/*                           Show both archived and unarchived*/}
-            {/*                           documents.  Archived documents are*/}
-            {/*                           hidden by default.*/}
-            {/*                         `}>*/}
-
-            {/*            <ToggleButton id="toggle-archived"*/}
-            {/*                          size="md"*/}
-            {/*                          label="archived"*/}
-            {/*                          iconClassName="fas fa-check"*/}
-            {/*                          initialValue={false}*/}
-            {/*                          onChange={value => this.props.onToggleFilterArchived(value)}/>*/}
-
-            {/*        </SimpleTooltipEx>*/}
-
-            {/*    </div>*/}
-
-            {/*</div>*/}
-
-            {/*<div className="header-filter-box mr-1 d-none-mobile"*/}
-            {/*     style={{whiteSpace: 'nowrap', marginTop: 'auto', marginBottom: 'auto'}}>*/}
-
-            {/*    <div className="header-filter-box">*/}
-
-            {/*        <SimpleTooltipEx text={`*/}
-            {/*                            Filter the document list by the title of the document.*/}
-            {/*                         `}>*/}
-
-            {/*            <InputGroup size="md">*/}
-
-            {/*                <InputFilter id="filter_title"*/}
-            {/*                             placeholder="Search by title"*/}
-            {/*                             style={{*/}
-            {/*                                 width: '20em'*/}
-            {/*                             }}*/}
-            {/*                             onChange={(value) => this.props.onFilterByTitle(value)}/>*/}
-
-            {/*            </InputGroup>*/}
-
-            {/*        </SimpleTooltipEx>*/}
-
-            {/*    </div>*/}
-
-            {/*</div>*/}
-
-            {/*<Right/>*/}
-
         </div>
 
     );
diff --git a/apps/repository/js/doc_repo/DocRepoScreen2.tsx b/apps/repository/js/doc_repo/DocRepoScreen2.tsx
index 2673e6eae..3574bfaea 100644
--- a/apps/repository/js/doc_repo/DocRepoScreen2.tsx
+++ b/apps/repository/js/doc_repo/DocRepoScreen2.tsx
@@ -16,6 +16,7 @@ import {DocRepoScreenRoutedComponents} from "./DocRepoScreenRoutedComponents";
 import {useHistory} from "react-router-dom";
 import useLocationWithHashOnly = ReactRouters.useLocationWithHashOnly;
 import SwipeableDrawer from "@material-ui/core/SwipeableDrawer";
+import {FeedbackButton} from "../ui/FeedbackButton";
 
 namespace main {
 
@@ -151,7 +152,6 @@ export const DocRepoScreen2 = React.memo(() => {
 
                 <DocRepoScreenRoutedComponents/>
 
-                {/*<RepositoryTour/>*/}
                 <header>
 
                     <DeviceRouters.Desktop>
@@ -160,8 +160,6 @@ export const DocRepoScreen2 = React.memo(() => {
 
                 </header>
 
-                {/*<Router/>*/}
-
                 <DeviceRouter handheld={<devices.PhoneAndTablet/>}
                               desktop={<devices.Desktop/>}/>
 
@@ -171,6 +169,8 @@ export const DocRepoScreen2 = React.memo(() => {
                         <AddContent.Handheld/>
                     </DeviceRouter.Handheld>
 
+                    <FeedbackButton/>
+
                 </FixedNav.Footer>
 
             </FixedNav>
diff --git a/apps/repository/js/doc_repo/buttons/StandardIconButton.tsx b/apps/repository/js/doc_repo/buttons/StandardIconButton.tsx
index 95799af79..1da8b6aa9 100644
--- a/apps/repository/js/doc_repo/buttons/StandardIconButton.tsx
+++ b/apps/repository/js/doc_repo/buttons/StandardIconButton.tsx
@@ -3,6 +3,7 @@ import {ButtonProps} from "./StandardToggleButton";
 import Tooltip from "@material-ui/core/Tooltip";
 import IconButton from "@material-ui/core/IconButton";
 import useTheme from "@material-ui/core/styles/useTheme";
+import {MUITooltip} from "../../../../../web/js/mui/MUITooltip";
 
 export interface StandardButtonProps extends ButtonProps {
     readonly tooltip: string;
@@ -14,7 +15,7 @@ export const StandardIconButton = (props: StandardButtonProps) => {
     const theme = useTheme();
 
     return (
-        <Tooltip title={props.tooltip}>
+        <MUITooltip title={props.tooltip}>
             <IconButton size={props.size || 'small'}
                         onClick={props.onClick}
                         disabled={props.disabled}
@@ -22,6 +23,6 @@ export const StandardIconButton = (props: StandardButtonProps) => {
                         style={{color: theme.palette.text.secondary}}>
                 {props.children}
             </IconButton>
-        </Tooltip>
+        </MUITooltip>
     );
 };
diff --git a/apps/repository/js/doc_repo/buttons/StandardToggleButton.tsx b/apps/repository/js/doc_repo/buttons/StandardToggleButton.tsx
index 8268a2188..93365d822 100644
--- a/apps/repository/js/doc_repo/buttons/StandardToggleButton.tsx
+++ b/apps/repository/js/doc_repo/buttons/StandardToggleButton.tsx
@@ -3,6 +3,7 @@ import {Callback1} from "polar-shared/src/util/Functions";
 import IconButton from "@material-ui/core/IconButton";
 import Tooltip from "@material-ui/core/Tooltip";
 import useTheme from "@material-ui/core/styles/useTheme";
+import {MUITooltip} from "../../../../../web/js/mui/MUITooltip";
 
 const activeColor = (active: boolean) => {
     const theme = useTheme();
@@ -24,12 +25,12 @@ export interface StandardToggleButtonProps extends ToggleButtonProps {
 }
 
 export const StandardToggleButton = React.memo((props: StandardToggleButtonProps) => (
-    <Tooltip title={props.tooltip} enterDelay={500}>
+    <MUITooltip title={props.tooltip}>
         <IconButton size={props.size || 'small'}
                     onClick={props.onClick}
                     aria-label={props.tooltip.toLowerCase()}
                     style={{color: activeColor(props.active || false)}}>
             {props.children}
         </IconButton>
-    </Tooltip>
+    </MUITooltip>
 ));
diff --git a/apps/repository/js/gateways/mobile/MobileGateway.tsx b/apps/repository/js/gateways/mobile/MobileGateway.tsx
new file mode 100644
index 000000000..4a0e57551
--- /dev/null
+++ b/apps/repository/js/gateways/mobile/MobileGateway.tsx
@@ -0,0 +1,41 @@
+import React from 'react';
+import {deepMemo} from "../../../../../web/js/react/ReactUtils";
+import {Platforms} from "polar-shared/src/util/Platforms";
+import {MobileGatewayDialog} from "./MobileGatewayDialog";
+import {Devices} from "polar-shared/src/util/Devices";
+
+interface IProps {
+
+    readonly children: React.ReactElement;
+
+}
+
+export const MobileGateway = deepMemo((props: IProps) => {
+
+    function isMobile() {
+
+        if (Platforms.isMobile()) {
+            return true;
+        }
+
+        if (Devices.isPhone()) {
+            return true;
+        }
+
+        if (Devices.isTablet()) {
+            return true;
+        }
+
+        return false;
+
+    }
+
+    if (isMobile()) {
+        return (
+            <MobileGatewayDialog/>
+        );
+    } else {
+        return props.children;
+    }
+
+});
\ No newline at end of file
diff --git a/apps/repository/js/gateways/mobile/MobileGatewayContent.tsx b/apps/repository/js/gateways/mobile/MobileGatewayContent.tsx
new file mode 100644
index 000000000..f617dc9a4
--- /dev/null
+++ b/apps/repository/js/gateways/mobile/MobileGatewayContent.tsx
@@ -0,0 +1,25 @@
+import * as React from 'react';
+import {deepMemo} from "../../../../../web/js/react/ReactUtils";
+import {PolarSVGIcon} from "../../../../../web/js/ui/svg_icons/PolarSVGIcon";
+
+export const MobileGatewayContent = deepMemo(() => {
+
+    return (
+        <div>
+
+            <div style={{display: 'flex', justifyContent: 'center'}}>
+                <PolarSVGIcon width={250} height={250}/>
+            </div>
+
+            <div style={{display: 'flex', justifyContent: 'center'}}>
+                <h1>Mobile Not Yet Supported</h1>
+            </div>
+
+            <h2 style={{textAlign: 'center'}}>
+                We don't yet support mobile but we're working on it. Please check back soon!
+            </h2>
+
+        </div>
+    );
+
+});
diff --git a/apps/repository/js/gateways/mobile/MobileGatewayDialog.tsx b/apps/repository/js/gateways/mobile/MobileGatewayDialog.tsx
new file mode 100644
index 000000000..56fe20d64
--- /dev/null
+++ b/apps/repository/js/gateways/mobile/MobileGatewayDialog.tsx
@@ -0,0 +1,22 @@
+import * as React from 'react';
+import Dialog from "@material-ui/core/Dialog";
+import DialogContent from "@material-ui/core/DialogContent";
+import {MobileGatewayContent} from "./MobileGatewayContent";
+
+
+export const MobileGatewayDialog = React.memo(() => {
+
+    return (
+
+        <Dialog maxWidth='md'
+                open={true}>
+
+            <DialogContent>
+                <MobileGatewayContent/>
+            </DialogContent>
+
+        </Dialog>
+
+    );
+
+});
diff --git a/apps/repository/js/gateways/two_migration/TwoMigrationContent.tsx b/apps/repository/js/gateways/two_migration/TwoMigrationContent.tsx
new file mode 100644
index 000000000..485b388f3
--- /dev/null
+++ b/apps/repository/js/gateways/two_migration/TwoMigrationContent.tsx
@@ -0,0 +1,109 @@
+import * as React from 'react';
+import {deepMemo} from "../../../../../web/js/react/ReactUtils";
+import {PolarSVGIcon} from "../../../../../web/js/ui/svg_icons/PolarSVGIcon";
+import Brightness4Icon from '@material-ui/icons/Brightness4';
+import {MUIBrowserLinks} from "../../../../../web/js/mui/MUIBrowserLinks";
+import CloudDoneIcon from '@material-ui/icons/CloudDone';
+import DescriptionIcon from '@material-ui/icons/Description';
+import SyncIcon from '@material-ui/icons/Sync';
+import KeyboardIcon from '@material-ui/icons/Keyboard';
+import createStyles from '@material-ui/core/styles/createStyles';
+import makeStyles from '@material-ui/core/styles/makeStyles';
+
+interface FeatureProps {
+    readonly title: string;
+    readonly description: string;
+    readonly icon: React.ReactNode;
+}
+
+const Feature = (props: FeatureProps) => {
+
+    return (
+        <div style={{
+                 display: 'flex',
+                 alignItems: 'top',
+                 marginBottom: '1em'
+             }}>
+
+            <div>
+                {props.icon}
+            </div>
+
+            <div style={{paddingLeft: '1em', flexGrow: 1}}>
+
+                    <div style={{fontWeight: 'bold', fontSize: '1.2em'}}>
+                        {props.title}
+                    </div>
+
+                    <div style={{display: 'flex'}}>
+
+                        <div style={{flexGrow: 1}}>
+                            {props.description}
+                        </div>
+
+                        <div style={{paddingLeft: '5px', whiteSpace: 'nowrap'}}>
+                        </div>
+
+                    </div>
+
+            </div>
+
+        </div>
+    );
+
+}
+
+const useStyles = makeStyles((theme) =>
+    createStyles({
+        root: {
+            fontSize: '1.2rem'
+        },
+    }),
+);
+export const TwoMigrationContent = deepMemo(() => {
+
+    const classes = useStyles();
+
+    // link to the blog post describing our changes
+    return (
+        <MUIBrowserLinks>
+            <div className={classes.root}>
+
+                <div style={{display: 'flex', justifyContent: 'center'}}>
+                    <PolarSVGIcon width={150} height={150}/>
+                </div>
+
+                <div style={{display: 'flex', justifyContent: 'center'}}>
+                    <h1>Welcome to Polar 2.0!</h1>
+                </div>
+
+                <h2>
+                    What's new in this release?
+                </h2>
+
+                <Feature title="Dark Mode"
+                         description="You can now pick between light and dark mode."
+                         icon={<Brightness4Icon/>}/>
+
+                <Feature title="Cloud Only"
+                         description="We're now cloud-only.  Migration from 1.0 is simple and should just take a few minutes."
+                         icon={<CloudDoneIcon/>}/>
+
+                <Feature title="EPUB Now Supported"
+                         description="EPUB is now a supported document format."
+                         icon={<DescriptionIcon/>}/>
+
+                <Feature title="Improved Anki Sync"
+                         description="We've improved our Anki sync support and stability."
+                         icon={<SyncIcon/>}/>
+
+                <Feature title="Keyboard Shortcuts"
+                         description="We've dramatically improved our support for keyboad shortcuts."
+                         icon={<KeyboardIcon/>}/>
+
+            </div>
+
+        </MUIBrowserLinks>
+    );
+
+});
diff --git a/apps/repository/js/gateways/two_migration/TwoMigrationDialog.tsx b/apps/repository/js/gateways/two_migration/TwoMigrationDialog.tsx
new file mode 100644
index 000000000..4e16f688d
--- /dev/null
+++ b/apps/repository/js/gateways/two_migration/TwoMigrationDialog.tsx
@@ -0,0 +1,65 @@
+import * as React from 'react';
+import Dialog from "@material-ui/core/Dialog";
+import DialogContent from "@material-ui/core/DialogContent";
+import DialogActions from '@material-ui/core/DialogActions';
+import Button from '@material-ui/core/Button';
+import { TwoMigrationContent } from './TwoMigrationContent';
+import {MUIGapBox} from "../../../../../web/js/mui/MUIGapBox";
+import {useNav} from "../../../../../web/js/ui/util/NavHook";
+
+interface IProps {
+    readonly onClose: () => void;
+}
+
+export const TwoMigrationDialog = React.memo((props: IProps) => {
+
+    const [open, setOpen] = React.useState(true);
+
+    const linkLoader = useNav();
+
+    const handleLink = React.useCallback(() => {
+        const link = "https://getpolarized.io/2020/10/05/Polar-2-0-Release.html";
+        linkLoader(link, {newWindow: true, focus: true});
+    }, [linkLoader]);
+
+    function handleClose() {
+        setOpen(false);
+        props.onClose();
+    }
+
+    return (
+
+        <Dialog maxWidth='md'
+                open={open}
+                onClose={handleClose}>
+
+            <DialogContent>
+                <TwoMigrationContent/>
+            </DialogContent>
+
+            <DialogActions style={{justifyContent: 'center'}}>
+
+                <MUIGapBox>
+
+                    <Button variant="contained"
+                            size="large"
+                            onClick={handleLink}>
+                        Read More
+                    </Button>
+
+                    <Button color="primary"
+                            variant="contained"
+                            size="large"
+                            onClick={handleClose}>
+                        Let's Go!
+                    </Button>
+
+                </MUIGapBox>
+
+            </DialogActions>
+
+        </Dialog>
+
+    );
+
+});
diff --git a/apps/repository/js/gateways/two_migration/TwoMigrationForAppRuntime.tsx b/apps/repository/js/gateways/two_migration/TwoMigrationForAppRuntime.tsx
new file mode 100644
index 000000000..1d9d196a4
--- /dev/null
+++ b/apps/repository/js/gateways/two_migration/TwoMigrationForAppRuntime.tsx
@@ -0,0 +1,54 @@
+import React from 'react';
+import {AppRuntime, AppRuntimeID} from "polar-shared/src/util/AppRuntime";
+import {TwoMigrationDialog} from "./TwoMigrationDialog";
+import {useLogger} from "../../../../../web/js/mui/MUILogger";
+
+interface IProps {
+
+    readonly children: React.ReactElement;
+
+    /**
+     * Only run under this runtime.
+     */
+    readonly runtime: AppRuntimeID;
+
+    readonly onClose: () => Promise<void>;
+
+}
+
+export type MigrationMarkerCallback = () => Promise<void>;
+
+export type MigrationHookResult = [boolean | undefined, MigrationMarkerCallback];
+
+export const TwoMigrationForAppRuntime = React.memo((props: IProps) => {
+
+    const [accepted, setAccepted] = React.useState(false);
+    const log = useLogger();
+
+    const handleClose = React.useCallback(() => {
+
+        async function doAsync() {
+            await props.onClose();
+            setAccepted(true);
+        }
+
+        doAsync()
+            .catch(err => log.error(err));
+
+    }, [log]);
+
+    if (AppRuntime.get() !== props.runtime) {
+        // we NEVER run this on anything else other than this runtime because
+        return props.children;
+    }
+
+    if (accepted) {
+        return props.children;
+    }
+
+    return (
+        <TwoMigrationDialog onClose={handleClose}/>
+    );
+
+});
+
diff --git a/apps/repository/js/gateways/two_migration/TwoMigrationForBrowser.tsx b/apps/repository/js/gateways/two_migration/TwoMigrationForBrowser.tsx
new file mode 100644
index 000000000..8a68f2df2
--- /dev/null
+++ b/apps/repository/js/gateways/two_migration/TwoMigrationForBrowser.tsx
@@ -0,0 +1,70 @@
+import * as React from 'react';
+import {usePrefs} from "../../persistence_layer/PrefsHook";
+import {LocalPrefs} from "../../../../../web/js/util/LocalPrefs";
+import { TwoMigrationForAppRuntime, MigrationHookResult } from './TwoMigrationForAppRuntime';
+
+const KEY = 'two-migration';
+
+function useMigration(): MigrationHookResult {
+
+    const prefs = usePrefs();
+    const persistentPrefs = prefs.value;
+
+    console.log("FIXME1: ", prefs);
+    if (persistentPrefs) {
+
+        console.log("FIXME2");
+
+        const doMigration = ! (persistentPrefs.isMarked(KEY) || LocalPrefs.isMarked(KEY));
+
+        const onClose = async () => {
+            LocalPrefs.mark(KEY);
+            persistentPrefs.mark(KEY);
+            await persistentPrefs.commit();
+        }
+
+        console.log("FIXME3");
+
+        return [doMigration, onClose];
+
+    }
+
+    if (prefs.error) {
+        console.log("FIXME4");
+
+        console.error("Could not useMigration: ", prefs.error);
+        throw prefs.error;
+    }
+
+    const onClose = async () => {
+        throw new Error("Not ready")
+    }
+
+    return [undefined, onClose];
+
+}
+
+interface IProps {
+    readonly children: React.ReactElement;
+}
+
+export const TwoMigrationForBrowser = React.memo((props: IProps) => {
+
+    const [doMigration, onClose] = useMigration();
+
+    if (doMigration === undefined) {
+        console.log("FIXME No doMigration")
+        return null;
+    }
+
+    if (! doMigration) {
+        return props.children;
+    }
+
+    return (
+        <TwoMigrationForAppRuntime runtime="browser" onClose={onClose}>
+            {props.children}
+        </TwoMigrationForAppRuntime>
+    );
+
+});
\ No newline at end of file
diff --git a/apps/repository/js/gateways/two_migration/TwoMigrationForElectron.tsx b/apps/repository/js/gateways/two_migration/TwoMigrationForElectron.tsx
new file mode 100644
index 000000000..c1ffc1cd8
--- /dev/null
+++ b/apps/repository/js/gateways/two_migration/TwoMigrationForElectron.tsx
@@ -0,0 +1,36 @@
+import * as React from 'react';
+import {LocalPrefs} from "../../../../../web/js/util/LocalPrefs";
+import { TwoMigrationForAppRuntime } from './TwoMigrationForAppRuntime';
+
+const KEY = 'two-migration';
+
+function useMigration(): [boolean, () => Promise<void>] {
+
+    const doMigration = ! LocalPrefs.isMarked(KEY);
+    const onClose = async () => {
+        LocalPrefs.mark(KEY);
+    }
+
+    return [doMigration, onClose];
+
+}
+
+interface IProps {
+    readonly children: React.ReactElement;
+}
+
+export const TwoMigrationForElectron = React.memo((props: IProps) => {
+
+    const [doMigration, onClose] = useMigration();
+
+    if (! doMigration) {
+        return props.children;
+    }
+
+    return (
+        <TwoMigrationForAppRuntime runtime="electron" onClose={onClose}>
+            {props.children}
+        </TwoMigrationForAppRuntime>
+    );
+
+});
\ No newline at end of file
diff --git a/apps/repository/js/gateways/two_migration/TwoMigrationWithLocalStorage.ts b/apps/repository/js/gateways/two_migration/TwoMigrationWithLocalStorage.ts
new file mode 100644
index 000000000..2ad0d2528
--- /dev/null
+++ b/apps/repository/js/gateways/two_migration/TwoMigrationWithLocalStorage.ts
@@ -0,0 +1,18 @@
+import {LocalPrefs} from "../../../../../web/js/util/LocalPrefs";
+
+export namespace TwoMigrationWithLocalStorage {
+
+    const KEY = 'two-migration';
+
+    /**
+     * Return true if this should be shown under ideal circumstances
+     */
+    export function shouldShow(): boolean {
+        return ! LocalPrefs.isMarked(KEY);
+    }
+
+    export function markShown() {
+        LocalPrefs.mark(KEY);
+    }
+
+}
diff --git a/apps/repository/js/persistence_layer/PrefsHook.ts b/apps/repository/js/persistence_layer/PrefsHook.ts
index 8582fb89d..a6ac86a89 100644
--- a/apps/repository/js/persistence_layer/PrefsHook.ts
+++ b/apps/repository/js/persistence_layer/PrefsHook.ts
@@ -32,6 +32,8 @@ export function usePrefs(): SubscriptionValue<PersistentPrefs> {
             throw new Error("Prefs is missing subscribe|get function(s) from datastore: " + datastore.id);
         }
 
+        console.log("FIXME7: ", prefs);
+
         // the onNext function will be called in the snapshot subscriber so that
         // we can receive future values and it also handles unsubscribe on
         // component unmount
diff --git a/apps/repository/js/premium/CancelPlan.tsx b/apps/repository/js/premium/CancelPlan.tsx
deleted file mode 100644
index 44b8a483e..000000000
--- a/apps/repository/js/premium/CancelPlan.tsx
+++ /dev/null
@@ -1,25 +0,0 @@
-import {deepMemo} from "../../../../web/js/react/ReactUtils";
-import {CancelSubscriptionButton} from "./PremiumContent";
-import React from "react";
-import {useUserSubscriptionContext} from "../../../../web/js/apps/repository/auth_handler/UserInfoProvider";
-
-export const CancelPlan = deepMemo(() => {
-
-    const {plan} = useUserSubscriptionContext();
-
-    if (plan.level === 'free') {
-        return null;
-    }
-
-    return (
-        <>
-            <hr/>
-            <p>
-                ... and of course in the ultra-rare case that Polar didn't work out you can always cancel at any time.
-            </p>
-
-            <CancelSubscriptionButton />
-        </>
-    );
-});
-
diff --git a/apps/repository/js/premium/Discounts.ts b/apps/repository/js/premium/Discounts.ts
index 231996517..1869c4378 100644
--- a/apps/repository/js/premium/Discounts.ts
+++ b/apps/repository/js/premium/Discounts.ts
@@ -1,4 +1,3 @@
-import {PlanInterval} from "./PremiumContent";
 import {Billing} from "polar-accounts/src/Billing";
 
 export interface Discount {
@@ -8,10 +7,6 @@ export interface Discount {
     readonly after: number;
 }
 
-const XMAS_2019: ReadonlyArray<Discount> = [
-
-];
-
 const DISCOUNTS: ReadonlyArray<Discount> = [];
 
 export interface DiscountMap {
@@ -24,12 +19,12 @@ export class Discounts {
 
     }
 
-    public get(interval: PlanInterval, plan: Billing.V2PlanLevel): Discount | undefined {
+    public get(interval: Billing.Interval, plan: Billing.V2PlanLevel): Discount | undefined {
         const key = Discounts.key(interval, plan);
         return this.delegate[key] || undefined;
     }
 
-    private static key(interval: PlanInterval, plan: Billing.V2PlanLevel) {
+    private static key(interval: Billing.Interval, plan: Billing.V2PlanLevel) {
         return `${interval}:${plan}`;
     }
 
diff --git a/apps/repository/js/premium/PlanIntervalButton.tsx b/apps/repository/js/premium/PlanIntervalButton.tsx
index e0052309f..7948c2019 100644
--- a/apps/repository/js/premium/PlanIntervalButton.tsx
+++ b/apps/repository/js/premium/PlanIntervalButton.tsx
@@ -1,12 +1,12 @@
 import {deepMemo} from "../../../../web/js/react/ReactUtils";
-import {usePremiumCallbacks, usePremiumStore} from "./PremiumStore";
+import {usePricingCallbacks, usePricingStore} from "./PricingStore";
 import React from "react";
 import Button from "@material-ui/core/Button";
 
 export const PlanIntervalButton = deepMemo(() => {
 
-    const {interval} = usePremiumStore(['interval']);
-    const {toggleInterval} = usePremiumCallbacks();
+    const {interval} = usePricingStore(['interval']);
+    const {toggleInterval} = usePricingCallbacks();
 
     return (
         <Button color="secondary"
diff --git a/apps/repository/js/premium/PlanIntervalToggle.tsx b/apps/repository/js/premium/PlanIntervalToggle.tsx
index 2c450ea9a..61bbe3435 100644
--- a/apps/repository/js/premium/PlanIntervalToggle.tsx
+++ b/apps/repository/js/premium/PlanIntervalToggle.tsx
@@ -1,14 +1,16 @@
-import {usePremiumCallbacks, usePremiumStore} from "./PremiumStore";
+import {usePricingCallbacks, usePricingStore} from "./PricingStore";
 import React from "react";
-import {PlanInterval} from "./PremiumContent";
 import ToggleButton from '@material-ui/lab/ToggleButton';
 import ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';
 import Typography from "@material-ui/core/Typography";
 import makeStyles from "@material-ui/core/styles/makeStyles";
+import {Billing} from "polar-accounts/src/Billing";
+import Paper from "@material-ui/core/Paper/Paper";
+import { Devices } from "polar-shared/src/util/Devices";
 
 const useStyles = makeStyles({
   button: {
-    width: "22em",
+    width: "20em",
   },
 
 });
@@ -17,39 +19,44 @@ export const PlanIntervalToggle = React.memo(() => {
 
     const classes = useStyles();
 
-    const {interval} = usePremiumStore(['interval']);
-    const {setInterval} = usePremiumCallbacks();
+    const {interval} = usePricingStore(['interval']);
+    const {setInterval} = usePricingCallbacks();
 
-    function handleChange(event: React.MouseEvent, newInterval: PlanInterval | null) {
+    const orientation = Devices.isPhone() ? 'vertical' : 'horizontal';
+
+    function handleChange(event: React.MouseEvent, newInterval: Billing.Interval | null) {
         setInterval(newInterval || 'month');
     }
 
     return (
-        <ToggleButtonGroup exclusive
-                           value={interval || 'month'}
-                           onChange={handleChange}>
-
-            <ToggleButton className={classes.button} value="month" aria-label="bold">
-                Monthly
-            </ToggleButton>
-
-            <ToggleButton className={classes.button} value="year" aria-label="bold">
-                <Typography>Yearly</Typography>
-                &nbsp;&nbsp;
-                <Typography color="secondary">One Month Free</Typography>
-            </ToggleButton>
-
-            <ToggleButton className={classes.button} value="4year" aria-label="bold">
-                <Typography>4 Years</Typography>
-                &nbsp;&nbsp;
-                <Typography color="secondary">Save Over 40%</Typography>
-            </ToggleButton>
-
-            {/*<ToggleButton value="4year" aria-label="bold">*/}
-            {/*  4 years <i>Save Over 40%!</i>*/}
-            {/*</ToggleButton>*/}
-
-        </ToggleButtonGroup>
+        <Paper elevation={1}>
+            <ToggleButtonGroup exclusive
+                               orientation={orientation}
+                               value={interval || 'month'}
+                               onChange={handleChange}>
+
+                <ToggleButton className={classes.button} value="month" aria-label="bold">
+                    Monthly
+                </ToggleButton>
+
+                <ToggleButton className={classes.button} value="year" aria-label="bold">
+                    <Typography>Yearly</Typography>
+                    &nbsp;&nbsp;
+                    <Typography color="secondary">One Month Free</Typography>
+                </ToggleButton>
+
+                {/*<ToggleButton className={classes.button} value="4year" aria-label="bold">*/}
+                {/*    <Typography>4 Years</Typography>*/}
+                {/*    &nbsp;&nbsp;*/}
+                {/*    <Typography color="secondary">Save Over 40%</Typography>*/}
+                {/*</ToggleButton>*/}
+
+                {/*<ToggleButton value="4year" aria-label="bold">*/}
+                {/*  4 years <i>Save Over 40%!</i>*/}
+                {/*</ToggleButton>*/}
+
+            </ToggleButtonGroup>
+        </Paper>
     );
 
 });
diff --git a/apps/repository/js/premium/PlanPricing.tsx b/apps/repository/js/premium/PlanPricing.tsx
index 2d9bac12d..29369ac58 100644
--- a/apps/repository/js/premium/PlanPricing.tsx
+++ b/apps/repository/js/premium/PlanPricing.tsx
@@ -1,37 +1,44 @@
 import {deepMemo} from "../../../../web/js/react/ReactUtils";
-import {usePremiumStore} from "./PremiumStore";
+import {usePricingStore} from "./PricingStore";
 import {Discount} from "./Discounts";
 import React from "react";
 import {Billing} from "polar-accounts/src/Billing";
 import createStyles from "@material-ui/core/styles/createStyles";
 import makeStyles from "@material-ui/core/styles/makeStyles";
-
+import {Numbers} from "polar-shared/src/util/Numbers";
 
 const useStyles = makeStyles((theme) =>
     createStyles({
         price: {
-            fontSize: '30px'
+            fontSize: '30px',
+            margin: 0
+        },
+        regularPrice: {
+            fontSize: '22px',
+            margin: 0
         },
         interval: {
             fontSize: '15px',
             color: theme.palette.text.hint
         },
+        billedAt: {
+            fontSize: '1.3rem',
+            lineHeight: '1.4rem',
+            color: theme.palette.text.hint
+        },
+
     }),
 );
 
-
 interface IProps {
     readonly plan: Billing.V2PlanLevel;
 }
 
-export const PlanPricing = deepMemo((props: IProps) => {
-
-    const classes = useStyles();
-    const {interval} = usePremiumStore(['interval']);
+namespace PlanPrices {
 
-    const computeMonthPrice = () => {
+    export function computeMonthPrice(plan: Billing.V2PlanLevel) {
 
-        switch (props.plan) {
+        switch (plan) {
             case "free":
                 return 0.0;
             case "plus":
@@ -40,10 +47,10 @@ export const PlanPricing = deepMemo((props: IProps) => {
                 return 14.99;
         }
 
-    };
+    }
 
-    const computeYearPrice = () => {
-        switch (props.plan) {
+    export function computeYearPrice(plan: Billing.V2PlanLevel) {
+        switch (plan) {
             case "free":
                 return 0.0;
             case "plus":
@@ -51,10 +58,10 @@ export const PlanPricing = deepMemo((props: IProps) => {
             case "pro":
                 return 164.99;
         }
-    };
+    }
 
-    const compute4YearPrice = () => {
-        switch (props.plan) {
+    export function compute4YearPrice(plan: Billing.V2PlanLevel) {
+        switch (plan) {
             case "free":
                 return 0.0;
             case "plus":
@@ -62,11 +69,21 @@ export const PlanPricing = deepMemo((props: IProps) => {
             case "pro":
                 return 399.99;
         }
-    };
+    }
+
+}
+
+export const PlanPricing = deepMemo((props: IProps) => {
+
+    const classes = useStyles();
+    const {plan} = props;
+    const {interval} = usePricingStore(['interval']);
 
     interface Pricing {
         readonly price: number;
         readonly discount: Discount | undefined;
+        readonly priceNormalizedPerMonth: number;
+        readonly regularPrice: number;
     }
 
     const computePrice = (): Pricing => {
@@ -75,25 +92,39 @@ export const PlanPricing = deepMemo((props: IProps) => {
 
             switch(interval) {
                 case "month":
-                    return computeMonthPrice();
+                    return PlanPrices.computeMonthPrice(plan);
                 case "year":
-                    return computeYearPrice();
+                    return PlanPrices.computeYearPrice(plan);
                 case "4year":
-                    return compute4YearPrice();
+                    return PlanPrices.compute4YearPrice(plan);
 
             }
 
         }
 
+        function intervalToMonths() {
+            switch (interval) {
+                case "month":
+                    return 1;
+                case "year":
+                    return 12;
+                case "4year":
+                    return 48;
+            }
+        }
+
         const price = computePriceFromInterval();
-        // const discount = discounts.get(interval, props.plan);
 
-        return {price, discount: undefined};
-    };
+        const priceNormalizedPerMonth = Numbers.toFixedFloat(price / intervalToMonths(), 2);
+        const regularPrice = PlanPrices.computeMonthPrice(plan);
+
+        return {price, discount: undefined, priceNormalizedPerMonth, regularPrice};
+
+    }
 
     const pricing = computePrice();
 
-    if (pricing.discount) {
+    if (pricing.discount !== undefined) {
 
         return <div>
 
@@ -113,11 +144,37 @@ export const PlanPricing = deepMemo((props: IProps) => {
     } else {
 
         return (
-            <div>
-                <h3 className={classes.price}>${pricing.price}<span
-                    className={classes.interval}>/{interval}</span>
+            <>
+                <h3 className={classes.price}>${pricing.priceNormalizedPerMonth}
+                    <span className={classes.interval}>/month</span>
                 </h3>
-            </div>
+
+                {(interval !== 'month' && plan !== 'free') && (
+                    <>
+
+                        <s>
+                            <h3 className={classes.regularPrice}>${pricing.regularPrice}
+                                <span className={classes.interval}>/month</span>
+                            </h3>
+                        </s>
+
+                        {interval === 'year' && (
+                            <p className={classes.billedAt}>
+                                Billed yearly at ${pricing.price}
+                                {/*<br/> with a 14 day trial.*/}
+                            </p>
+                        )}
+
+                        {interval === '4year' && (
+                            <p className={classes.billedAt}>
+                                Billed once at ${pricing.price}
+                                {/*<br/> with a 14 day trial.*/}
+                            </p>
+                        )}
+
+                    </>
+                )}
+            </>
         );
 
     }
diff --git a/apps/repository/js/premium/PremiumButton.tsx b/apps/repository/js/premium/PremiumButton.tsx
index fa476a0a9..7f3f95455 100644
--- a/apps/repository/js/premium/PremiumButton.tsx
+++ b/apps/repository/js/premium/PremiumButton.tsx
@@ -1,18 +1,10 @@
 import * as React from 'react';
-import {Nav} from '../../../../web/js/ui/util/Nav';
-import {AccountActions} from '../../../../web/js/accounts/AccountActions';
 import {Billing} from "polar-accounts/src/Billing";
 import Button from '@material-ui/core/Button';
-import {useDialogManager} from "../../../../web/js/mui/dialogs/MUIDialogControllers";
-import {useLogger} from "../../../../web/js/mui/MUILogger";
 import {deepMemo} from "../../../../web/js/react/ReactUtils";
-import {
-    useUserInfoContext,
-    useUserSubscriptionContext
-} from "../../../../web/js/apps/repository/auth_handler/UserInfoProvider";
-import {usePremiumStore} from './PremiumStore';
 import makeStyles from '@material-ui/core/styles/makeStyles';
 import createStyles from '@material-ui/core/styles/createStyles';
+import {useChangePlanActionContext} from "./actions/ChangePlanAction";
 
 const useStyles = makeStyles((theme) =>
     createStyles({
@@ -26,89 +18,34 @@ const useStyles = makeStyles((theme) =>
 
 
 export interface IProps {
-    readonly newPlan: Billing.V2PlanLevel;
+    readonly newSubscription: Billing.V2Subscription;
 }
 
 export const PremiumButton = deepMemo((props: IProps) => {
 
     const classes = useStyles();
-    const userInfoContext = useUserInfoContext();
-    const subscription = useUserSubscriptionContext();
-    const {interval} = usePremiumStore(['interval']);
+    const changePlanActionContext = useChangePlanActionContext();
 
-    const log = useLogger();
+    const {newSubscription} = props;
 
-    const {newPlan} = props;
+    const {subscription} = changePlanActionContext;
 
     // true when this is the current plan and we do not need to show the
     // button
-    const currentPlan = newPlan === subscription.plan.level && subscription.interval === interval;
-
-    const email = userInfoContext?.userInfo?.email;
+    const currentPlan = (newSubscription.plan.level === 'free' && newSubscription.plan.level === subscription?.plan.level) ||
+                        Subscriptions.isEqual(newSubscription, subscription);
 
     // true if we're BUYING a new plan...
-    const buyingNewPlan = subscription.plan.level === 'free';
+    const buyingNewPlan = subscription?.plan.level === 'free';
 
     const text = buyingNewPlan ? "Buy" : "Change Plan";
 
-    const dialogManager = useDialogManager();
-
-    const computeNewPlanID = () => {
-
-        if (interval === 'year') {
-            return `${newPlan}_${interval}`;
-        }
-
-        return newPlan;
-
-    };
-
-    const newPlanID = computeNewPlanID();
-
-    const buyHandler = () => {
-        // if we're buying a NEW product go ahead and redirect us to
-        // stripe and use their BUY package.  This is better than embedding
-        // the stripe SDK and also stripe ALSO needs to run over HTTPS
-
-        if (email) {
-
-            const params = {
-                email: encodeURIComponent(email)
-            };
-
-            Nav.openLinkWithNewTab(`https://getpolarized.io/pay.html?email=${params.email}&plan=${newPlanID}`);
-        } else {
-            Nav.openLinkWithNewTab(`https://getpolarized.io/pay.html?plan=${newPlanID}`);
-        }
-
-    };
-
-    const changeHandler = () => {
-
-        const onAccept = () => {
-
-            console.log("Changing plan to: " + newPlanID);
-
-            dialogManager.snackbar({message: `Changing plan to ${newPlan} (${interval}).  One moment...`});
-
-            AccountActions.changePlan(newPlan, interval)
-                          .catch(err => log.error("Unable to upgrade plan: ", err));
-
-        };
-
-        dialogManager.confirm({
-            title: `Are you sure you want to change to ${newPlan}?`,
-            subtitle: 'Your billing will automatically be updated and account pro-rated.',
-            type: 'warning',
-            onAccept
-        });
-
-    };
-
-    const handler = buyingNewPlan ? buyHandler : changeHandler;
+    const clickHandler = React.useCallback(() => {
+        changePlanActionContext.action(newSubscription);
+    }, [changePlanActionContext, newSubscription]);
 
     return (
-        <div>
+        <div style={{margin: '1rem'}}>
 
             {currentPlan && (
                 <span className={classes.current_plan}>CURRENT PLAN</span>
@@ -117,7 +54,7 @@ export const PremiumButton = deepMemo((props: IProps) => {
             {! currentPlan && (
                 <Button color="primary"
                         variant="contained"
-                        onClick={() => handler()}>
+                        onClick={clickHandler}>
 
                     {text}
 
@@ -126,3 +63,9 @@ export const PremiumButton = deepMemo((props: IProps) => {
         </div>
     );
 })
+
+namespace Subscriptions {
+    export function isEqual(a: Billing.V2Subscription | undefined, b: Billing.V2Subscription | undefined) {
+        return a?.plan.level === b?.plan.level && a?.interval === b?.interval;
+    }
+}
\ No newline at end of file
diff --git a/apps/repository/js/premium/PremiumContent.tsx b/apps/repository/js/premium/PremiumContent.tsx
deleted file mode 100644
index a20178125..000000000
--- a/apps/repository/js/premium/PremiumContent.tsx
+++ /dev/null
@@ -1,160 +0,0 @@
-/* eslint react/no-multi-comp: 0, react/prop-types: 0 */
-import React from 'react';
-import {AccountActions} from '../../../../web/js/accounts/AccountActions';
-import {Numbers} from "polar-shared/src/util/Numbers";
-import {DesktopContent, MobileContent} from "./PremiumCopy";
-import {Discount, Discounts} from "./Discounts";
-import {DeviceRouter} from "../../../../web/js/ui/DeviceRouter";
-import {Billing} from "polar-accounts/src/Billing";
-import Button from '@material-ui/core/Button';
-import {useDialogManager} from "../../../../web/js/mui/dialogs/MUIDialogControllers";
-import {useLogger} from "../../../../web/js/mui/MUILogger";
-import {Plans} from "polar-accounts/src/Plans";
-import {deepMemo} from "../../../../web/js/react/ReactUtils";
-import { usePremiumCallbacks, usePremiumStore } from './PremiumStore';
-import {useUserSubscriptionContext} from "../../../../web/js/apps/repository/auth_handler/UserInfoProvider";
-import {PlanPricing} from "./PlanPricing";
-
-const discounts = Discounts.create();
-
-function useCancelSubscription() {
-
-    const log = useLogger();
-    const dialogManager = useDialogManager();
-
-    return () => {
-
-        const onAccept = () => {
-
-            dialogManager.snackbar({message: "Canceling plan.  One moment..."});
-
-            AccountActions.cancelSubscription()
-                .catch(err => log.error("Unable to cancel plan: ", err));
-
-        };
-
-        dialogManager.confirm({
-            title: `Are you sure you want to cancel your plan and revert to the free tier?`,
-            subtitle: 'Your billing will automatically be updated and account pro-rated.',
-            onAccept
-        });
-
-    }
-
-}
-
-export const CancelSubscriptionButton = deepMemo(() => {
-
-    const {plan} = useUserSubscriptionContext();
-    const handleCancelSubscription = useCancelSubscription();
-
-    if (plan.level === 'free') {
-        return null;
-    }
-
-    return (
-        <Button size="large"
-                variant="contained"
-                onClick={handleCancelSubscription}>
-
-            Cancel Subscription
-
-        </Button>
-    );
-
-});
-
-
-export const PricingOverview = deepMemo(() => {
-    return (
-        <div>
-            <div className="text-center mb-3">
-                <h1>Pricing and Plans</h1>
-            </div>
-
-            <p className="text-center mb-3 text-xlarge">
-                Polar is designed to scale to from both novice users to
-                Power users.
-
-                Just need to read a few PDFs. No problem. Need to manage
-                and read hundreds to thousands of documents? No problem.
-            </p>
-
-            <p className="text-center mb-3 text-xlarge">
-                Have an issue?  Feel free to send us an email at <b>support@getpolarized.io</b>
-            </p>
-        </div>
-    );
-});
-
-export const FreePlan = deepMemo(() => {
-    return <div>
-        <h2>FREE</h2>
-
-        <h3 className="text-xxlarge">$0</h3>
-        <p className="text-small text-tint">
-            We want as many people to use Polar as
-            possible. Most people
-            easily stay within these limits.
-        </p>
-
-    </div>;
-});
-
-export const PlusPlan = deepMemo((props: IState) => {
-
-    return <div>
-        <h2>PLUS</h2>
-
-        <PlanPricing plan='plus'/>
-
-        <p className="text-small text-tint">Less
-            than the price of a cup of
-            coffee. Need more storage and ready to
-            move up to the next level? We're ready
-            when you are!</p>
-
-    </div>;
-
-});
-
-export const ProPlan = deepMemo(() => {
-    return <div>
-        <h2>PRO</h2>
-
-        <PlanPricing plan='pro'/>
-
-        <p className="text-small text-tint">
-            You can't live without Polar
-            and have a massive amount of data that
-            you need to keep secure.
-        </p>
-        <br/>
-    </div>;
-});
-
-
-export const PremiumContent = deepMemo(() => {
-
-    const phoneOrTablet = (
-        <MobileContent/>
-    );
-
-    const desktop = (
-        <DesktopContent/>
-    );
-
-    return (
-        <DeviceRouter phone={phoneOrTablet} tablet={phoneOrTablet} desktop={desktop}/>
-    );
-
-});
-
-interface IProps {
-}
-
-interface IState {
-}
-
-export type PlanInterval = 'month' | 'year' | '4year';
-
diff --git a/apps/repository/js/premium/PremiumContent2.tsx b/apps/repository/js/premium/PremiumContent2.tsx
deleted file mode 100644
index dd9f7a7c7..000000000
--- a/apps/repository/js/premium/PremiumContent2.tsx
+++ /dev/null
@@ -1,615 +0,0 @@
-import React from "react";
-import {Box, Divider, makeStyles, Paper, Typography} from "@material-ui/core";
-import {DeviceRouter} from "../../../../web/js/ui/DeviceRouter";
-import {FATimesCircleIcon} from "../../../../web/js/mui/MUIFontAwesome";
-import {PremiumButton} from "./PremiumButton";
-import {PlanCheckIcon} from "./PlanCheckIcon";
-import {PlanPricing} from "./PlanPricing";
-import {usePremiumCallbacks, usePremiumStore} from "./PremiumStore";
-import {PlanInterval} from "./PremiumContent";
-import {PricingFAQ} from "./PricingFAQ";
-import {PlanIntervalToggle} from "./PlanIntervalToggle";
-
-const useStyles = makeStyles({
-  checkCircle: {
-    maxHeight: "24px",
-  },
-
-  header: {
-    fontFamily: "Roboto",
-    fontStyle: "normal",
-    fontWeight: "normal",
-    // fontSize: "min(28px, 2.5vw)",
-    fontSize: "28px",
-    lineHeight: "33px",
-    marginTop: "40px",
-    // margin: "20px 0",
-  },
-
-  headerMobile: {
-    fontFamily: "Roboto",
-    fontStyle: "normal",
-    fontWeight: "normal",
-    // fontSize: "min(28px, 2.5vw)",
-    fontSize: "38px",
-    lineHeight: "33px",
-    marginTop: "30px",
-    // margin: "20px 0",
-  },
-
-  tableDesktop: {
-    fontSize: '16px',
-    margin: "10px auto 10px auto",
-    mixBlendMode: "normal",
-    width: "80%",
-    textAlign: "center",
-    borderCollapse: "collapse",
-    paddingRight: "25px",
-  },
-
-  imgBox: {
-    margin: "0 auto",
-    display: "flex",
-    justifyContent: "center",
-  },
-
-  buttonSignUp: {
-    textTransform: "none",
-    marginBottom: "8px",
-    backgroundColor: "#6754D6",
-    width: "9vw",
-    height: "45px",
-  },
-
-  buttonSignUpMobile: {
-    textTransform: "none",
-    marginBottom: "8px",
-    backgroundColor: "#6754D6",
-    // width: "58%",
-    padding: "0 20%",
-    height: "45px",
-    // minHeight: "45px",
-
-    fontSize: "20px",
-  },
-
-  rowHead: {
-    textAlign: "right",
-    padding: "7px 0px 7px 20px",
-  },
-
-  divider: {
-    marginLeft: "4%",
-    width: "92%",
-  },
-  row: {
-    height: "55px",
-    width: "65%",
-  },
-
-  pricing: {
-    fontStyle: "normal",
-    fontWeight: "bold",
-    fontSize: "32px",
-    lineHeight: "37px",
-
-    letterSpacing: "0.15px",
-
-    color: "#E0E0E0",
-    margin: "20px 0",
-  },
-
-  rate: {
-    fontStyle: "normal",
-    fontWeight: "bold",
-    fontSize: "12px",
-    lineHeight: "14px",
-    letterSpacing: "0.15px",
-    color: "#E0E0E0",
-  },
-
-  subtitle: {
-    fontStyle: "normal",
-    fontWeight: "normal",
-    fontSize: "1.2em",
-    lineHeight: "1.2em",
-    textAlign: "center",
-    letterSpacing: "0.15px",
-    color: "#E0E0E0",
-    paddingBottom: "10%",
-  },
-
-  subtitleMobile: {
-    fontStyle: "normal",
-    fontWeight: "normal",
-    fontSize: "16px",
-    lineHeight: "19px",
-
-    textAlign: "center",
-    letterSpacing: "0.15px",
-    marginTop: "5px",
-    color: "#E0E0E0",
-    paddingBottom: "8%",
-  },
-
-  rowHeadMobile: {
-    textAlign: "left",
-  },
-
-  pricePlanTab: {
-    mixBlendMode: "normal",
-    display: "flex",
-    flexDirection: "column",
-    justifyContent: "center",
-    alignItems: "center",
-    width: "33%",
-    marginBottom: "8%",
-    paddingBottom: "5%",
-  },
-
-  pricePlanMobile: {
-    mixBlendMode: "normal",
-    display: "flex",
-    flexDirection: "column",
-    // justifyContent: "center",
-    alignItems: "center",
-    width: "340px",
-    // minWidth: "300px",
-    // width: "70%",
-    margin: "15px",
-    // paddingBottom: "5%",
-    height: "705px",
-  },
-
-  tableMobile: {
-    mixBlendMode: "normal",
-    width: "70%",
-    borderCollapse: "collapse",
-    paddingRight: "25px",
-    textAlign: "center",
-    fontSize: "16px",
-  },
-});
-
-export const PremiumContent2 = () => {
-
-  return (
-    <DeviceRouter handheld={<Mobile/>} desktop={<Desktop/>}/>
-  );
-
-}
-
-const Mobile = () => {
-
-  const classes = useStyles();
-  return (
-    <Box
-      style={{
-        display: "flex",
-        // flexDirection: "column",
-        alignItems: "center",
-        justifyContent: "center",
-        flexWrap: "wrap",
-        marginBottom: "40px",
-      }}
-    >
-      <Box className={classes.pricePlanMobile}>
-        <Box className={classes.headerMobile}>Launch</Box>
-        <Box className={classes.pricing}> Free </Box>
-        <Box className={classes.subtitleMobile}>
-          Free forever
-        </Box>
-
-        <table className={classes.tableMobile}>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Updates
-            </td>
-            <td>
-              <Box style={{ width: "50%" }} className={classes.imgBox}>
-                <PlanCheckIcon/>
-              </Box>
-            </td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Web + Desktop
-            </td>
-            <td>
-              <Box style={{ width: "50%" }} className={classes.imgBox}>
-                <PlanCheckIcon/>
-              </Box>
-            </td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Storage
-            </td>
-            <td>1 GB</td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Maximum Captured <br /> Web Documents
-            </td>
-            <td>250</td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Devices
-            </td>
-            <td>2</td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Priority Support
-            </td>
-            <td>
-              <Box style={{ width: "50%" }} className={classes.imgBox}>
-                <FATimesCircleIcon className={classes.checkCircle} />
-              </Box>
-            </td>
-          </tr>
-          {/* <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Maximum Daily <br /> Flashcard Reviews
-            </td>
-            <td>20</td>
-          </tr> */}
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Related Tags
-            </td>
-            <td>
-              <Box style={{ width: "50%" }} className={classes.imgBox}>
-                <FATimesCircleIcon className={classes.checkCircle} />
-              </Box>
-            </td>
-          </tr>
-        </table>
-      </Box>
-      <Box className={classes.pricePlanMobile}>
-        <Box className={classes.headerMobile}>Plus</Box>
-        <Box className={classes.pricing}>
-          $6.99
-          <span className={classes.rate}>/mo</span>
-        </Box>
-
-        <PremiumButton newPlan="plus" />
-
-        <Box className={classes.subtitleMobile}>
-          1 year commitment <br />
-          gets one month free
-        </Box>
-        <table className={classes.tableMobile}>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Updates
-            </td>
-            <td>
-              <Box style={{ width: "50%" }} className={classes.imgBox}>
-                <PlanCheckIcon/>
-              </Box>
-            </td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Web + Desktop
-            </td>
-            <td>
-              <Box style={{ width: "50%" }} className={classes.imgBox}>
-                <PlanCheckIcon/>
-              </Box>
-            </td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Storage
-            </td>
-            <td>50 GB</td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Maximum Captured <br /> Web Documents
-            </td>
-            <td>unlimited</td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Devices
-            </td>
-            <td>3</td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Priority Support
-            </td>
-            <td>
-              <Box style={{ width: "50%" }} className={classes.imgBox}>
-                <PlanCheckIcon/>
-              </Box>
-            </td>
-          </tr>
-          {/* <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Maximum Daily <br /> Flashcard Reviews
-            </td>
-            <td>unlimited</td>
-          </tr> */}
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Related Tags
-            </td>
-            <td>
-              <Box style={{ width: "50%" }} className={classes.imgBox}>
-                <PlanCheckIcon/>
-              </Box>
-            </td>
-          </tr>
-        </table>
-      </Box>
-      <Box className={classes.pricePlanMobile}>
-        <Box className={classes.headerMobile}>Pro</Box>
-        <Box className={classes.pricing}>
-          $14.99
-          <span className={classes.rate}>/mo</span>
-        </Box>
-
-        <PremiumButton newPlan="pro" />
-
-        <Box className={classes.subtitleMobile}>
-          1 year commitment <br />
-          gets one month free
-        </Box>
-        <table className={classes.tableMobile}>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Updates
-            </td>
-            <td>
-              <Box style={{ width: "50%" }} className={classes.imgBox}>
-                <PlanCheckIcon/>
-              </Box>
-            </td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Web + Desktop
-            </td>
-            <td>
-              <Box style={{ width: "50%" }} className={classes.imgBox}>
-                <PlanCheckIcon/>
-              </Box>
-            </td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Storage
-            </td>
-            <td>500 GB</td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Maximum Captured <br /> Web Documents
-            </td>
-            <td>unlimited</td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Devices
-            </td>
-            <td>unlimited</td>
-          </tr>
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Priority Support
-            </td>
-            <td>
-              <Box style={{ width: "50%" }} className={classes.imgBox}>
-                <PlanCheckIcon/>
-              </Box>
-            </td>
-          </tr>
-          {/* <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Maximum Daily <br /> Flashcard Reviews
-            </td>
-            <td>unlimited</td>
-          </tr> */}
-          <tr className={classes.row}>
-            <td style={{ width: "50%" }} className={classes.rowHeadMobile}>
-              Related Tags
-            </td>
-            <td>
-              <Box style={{ width: "50%" }} className={classes.imgBox}>
-                <PlanCheckIcon/>
-              </Box>
-            </td>
-          </tr>
-        </table>
-      </Box>
-    </Box>
-  );
-}
-
-const TableRowDivider = React.memo(() => {
-
-  const classes = useStyles();
-
-  return (
-      <tr>
-        <td colSpan={5}>
-          <Divider className={classes.divider} />
-        </td>
-      </tr>
-  );
-
-});
-
-const DesktopTable = () => {
-
-  const classes = useStyles();
-
-  return (
-      <Paper className={classes.tableDesktop}>
-        <table>
-          <tbody>
-          <tr style={{ height: "100px", verticalAlign: "top" }}>
-            <th style={{ width: "12%" }}>
-              <div className="mt-2 mb-2">
-                {/*<FindPlan/>*/}
-                {/*<PlanIntervalButton/>*/}
-              </div>
-            </th>
-            <th style={{ width: "22%" }}>
-              <Box className={classes.header}>Free</Box>
-              <Box className={classes.pricing}>
-                <PlanPricing plan='free'/>
-              </Box>
-              {/*<Button className={classes.buttonSignUp}>Get Started</Button>*/}
-              <Box className={classes.subtitle}>
-                Free forever
-              </Box>
-            </th>
-            <th style={{ width: "22%" }}>
-              <Box className={classes.header}>Plus</Box>
-              <Box className={classes.pricing}>
-                <PlanPricing plan='plus'/>
-              </Box>
-
-              <PremiumButton newPlan="plus" />
-
-              {/*<Box className={classes.subtitle}>*/}
-              {/*  1 year commitment <br /> gets one month free*/}
-              {/*</Box>*/}
-            </th>
-            <th style={{ width: "22%" }}>
-              <Box className={classes.header}>Pro</Box>
-              <Box className={classes.pricing}>
-                <PlanPricing plan='pro'/>
-              </Box>
-
-              <PremiumButton newPlan="pro" />
-
-              {/*<Box className={classes.subtitle}>*/}
-              {/*  1 year commitment <br /> gets one month free*/}
-              {/*</Box>*/}
-            </th>
-          </tr>
-
-          <TableRowDivider/>
-
-          <tr className={classes.row}>
-            <td className={classes.rowHead}>Storage</td>
-            <td>1 GB</td>
-            <td>50 GB</td>
-            <td>500 GB</td>
-          </tr>
-          <td colSpan={5}>
-            <Divider className={classes.divider} />
-          </td>
-          <tr className={classes.row}>
-            <td className={classes.rowHead}>
-              Maximum Captured <br /> Web Documents
-            </td>
-            <td>250</td>
-            <td>unlimited</td>
-            <td>unlimited</td>
-          </tr>
-          <td colSpan={5}>
-            <Divider className={classes.divider} />
-          </td>
-          <tr className={classes.row}>
-            <td className={classes.rowHead}>Devices</td>
-            <td>2</td>
-            <td>3</td>
-            <td>unlimited</td>
-          </tr>
-          <td colSpan={5}>
-            <Divider className={classes.divider} />
-          </td>
-          <tr className={classes.row}>
-            <td className={classes.rowHead}>Priority Support</td>
-            <td>
-              <Box className={classes.imgBox}>
-                <FATimesCircleIcon className={classes.checkCircle} />
-              </Box>
-            </td>
-            <td>
-              <Box className={classes.imgBox}>
-                <PlanCheckIcon/>
-              </Box>
-            </td>
-            <td>
-              <Box className={classes.imgBox}>
-                <PlanCheckIcon/>
-              </Box>
-            </td>
-          </tr>
-          <td colSpan={5}>
-            <Divider className={classes.divider} />
-          </td>
-          {/* <tr className={classes.row}>
-            <td className={classes.rowHead}>
-              Maximum Daily <br /> Flashcard Reviews
-            </td>
-            <td>20</td>
-            <td>unlimited</td>
-            <td>unlimited</td>
-            <td>unlimited</td>
-          </tr>*/}
-          {/* <td colSpan={5}>
-            <Divider className={classes.divider} />
-          </td> */}
-          <tr className={classes.row}>
-            <td className={classes.rowHead}>Related Tags</td>
-            <td>
-              <Box className={classes.imgBox}>
-                <FATimesCircleIcon className={classes.checkCircle} />
-              </Box>
-            </td>
-            <td>
-              <Box className={classes.imgBox}>
-                <PlanCheckIcon/>
-              </Box>
-            </td>
-            <td>
-              <Box className={classes.imgBox}>
-                <PlanCheckIcon/>
-              </Box>
-            </td>
-          </tr>
-          <tr style={{ height: "50px" }}></tr>
-          </tbody>
-        </table>
-      </Paper>
-  );
-}
-
-const Desktop = () => {
-
-  return (
-      <div style={{
-               display: 'flex',
-               flexDirection: 'column'
-           }}>
-
-        <div className="ml-auto mr-auto pb-5">
-          <h1>Plans and Pricing</h1>
-        </div>
-
-        <div className="ml-auto mr-auto pb-5">
-          <PlanIntervalToggle/>
-        </div>
-
-        <div className="mt-4"
-             style={{display: 'flex'}}>
-          <DesktopTable/>
-        </div>
-
-        <div className="ml-auto mr-auto">
-          <PricingFAQ/>
-        </div>
-
-      </div>
-  );
-}
diff --git a/apps/repository/js/premium/PremiumCopy.tsx b/apps/repository/js/premium/PremiumCopy.tsx
deleted file mode 100644
index 8d2bcbfbf..000000000
--- a/apps/repository/js/premium/PremiumCopy.tsx
+++ /dev/null
@@ -1,316 +0,0 @@
-import {UserInfo} from "../../../../web/js/apps/repository/auth_handler/AuthHandler";
-import {
-    CancelSubscriptionButton,
-    FreePlan,
-    PlanInterval,
-    PlusPlan,
-    PricingOverview,
-    ProPlan,
-} from "./PremiumContent";
-import {PremiumButton} from "./PremiumButton";
-import React from "react";
-import {Billing} from "polar-accounts/src/Billing";
-import {useUserSubscriptionContext} from "../../../../web/js/apps/repository/auth_handler/UserInfoProvider";
-import {CancelPlan} from "./CancelPlan";
-import {PlanIntervalButton} from "./PlanIntervalButton";
-import { FindPlan } from "./FindPlan";
-
-export const MobileContent = () => {
-
-    return <div id="pricing" className="mt-1 pb-1">
-        <FindPlan/>
-
-        <div className="mb-1">
-            <PlanIntervalButton/>
-        </div>
-
-        <div>
-
-            <hr/>
-
-            <FreePlan/>
-
-            <p className="font-weight-bold">
-                Basic plan includes:
-            </p>
-
-            <ul>
-                <li>Flashcard review for desktop only</li>
-                <li>Two (2) cloud sync devices</li>
-                <li>350MB of cloud storage</li>
-                <li>up to 100 captured web documents</li>
-            </ul>
-
-        </div>
-
-        <div className="mt-3">
-
-            <hr/>
-
-            <PlusPlan/>
-
-            <p className="font-weight-bold">
-                Adds the following features:
-            </p>
-
-            <div className="ml-3 mt-1 mb-2">
-                <div><i className="fa fa-check"/> Three (4) cloud sync devices </div>
-                <div><i className="fa fa-check"/> Up to 5GB of storage </div>
-            </div>
-
-            <PremiumButton newPlan="plus" />
-
-        </div>
-
-        <div className="mt-3">
-            <hr/>
-
-            <ProPlan/>
-
-            <p className="font-weight-bold">
-                Adds the following features:
-            </p>
-
-            <div className="ml-3 mt-1 mb-2">
-                <div><i className="fa fa-check"/> Unlimited cloud sync devices </div>
-                <div><i className="fa fa-check"/> Up to 12GB of storage </div>
-            </div>
-
-            <PremiumButton newPlan="pro" />
-
-        </div>
-
-        <div className="ml-auto">
-            <CancelPlan/>
-        </div>
-
-    </div>;
-};
-
-export const DesktopContent =  () => {
-
-    const {plan} = useUserSubscriptionContext();
-
-    return (
-        <div className={"plan-" + plan} >
-
-            <div id="pricing" className="hidden-xs m-2">
-
-                <PricingOverview/>
-
-                    <table className="table">
-                        <thead>
-                        <tr>
-                            <th>
-                                <FindPlan/>
-
-                                <p className="text-center">
-                                    <PlanIntervalButton />
-                                </p>
-
-                            </th>
-                            <th className="">
-                                <FreePlan/>
-                            </th>
-                            <th className="">
-                                <PlusPlan />
-                            </th>
-                            <th className="">
-                                <ProPlan />
-                            </th>
-                        </tr>
-                        </thead>
-                        <tbody>
-
-                        <tr className="buy-links">
-                            <td>
-                            </td>
-                            <td>
-                            </td>
-                            <td>
-                                <PremiumButton newPlan="plus" />
-                            </td>
-                            <td className="">
-                                <PremiumButton newPlan="pro" />
-                            </td>
-                        </tr>
-
-                        <tr>
-                            <td>
-                                Automatic Updates
-                            </td>
-
-                            <td className="">
-                                <i className="fa fa-check"/>
-                            </td>
-                            <td className="">
-                                <i className="fa fa-check"/>
-                            </td>
-                            <td className="">
-                                <i className="fa fa-check"/>
-                            </td>
-                        </tr>
-
-                        <tr>
-                            <td>
-                                Web + Desktop
-                            </td>
-
-                            <td className="">
-                                <i className="fa fa-check"/>
-                            </td>
-                            <td className="">
-                                <i className="fa fa-check"/>
-                            </td>
-                            <td className="">
-                                <i className="fa fa-check"/>
-                            </td>
-                        </tr>
-
-                        <tr>
-                            <td>
-                                Flashcards and Incremental Reading with Spaced Repetition
-                            </td>
-
-                            <td className="text-danger">
-                                desktop only
-                            </td>
-                            <td>
-                                mobile, web, and desktop
-                            </td>
-                            <td>
-                                mobile, web, and desktop
-                            </td>
-                        </tr>
-                        <tr>
-                            <td>
-                                Feature/roadmap votes and priority
-                            </td>
-
-                            <td className="text-danger">
-                                1
-                            </td>
-                            <td>
-                                2
-                            </td>
-                            <td>
-                                3
-                            </td>
-                        </tr>
-
-                        <tr>
-                            <td>
-                                Number of active cloud sync devices
-                            </td>
-
-                            <td className="">
-                                2
-                            </td>
-                            <td className="">
-                                3
-                            </td>
-                            <td className="">
-                                4
-                            </td>
-                        </tr>
-                        <tr>
-                            <td>
-                                Cloud storage
-                            </td>
-
-                            <td className="">
-                                Up to 350MB
-                            </td>
-                            <td className="">
-                                Up to 2GB
-                            </td>
-                            <td className="">
-                                Up to 5GB
-                            </td>
-                        </tr>
-                        <tr>
-                            <td>
-                                Max Captured Web Documents
-                            </td>
-
-                            <td className="">
-                                Up to 100
-                            </td>
-                            <td className="">
-                                Up to 500
-                            </td>
-                            <td className="">
-                                Up to 1500
-                            </td>
-                        </tr>
-                        <tr>
-                            <td>
-                                Related tag suggestions
-                            </td>
-
-                            <td className="">
-                            </td>
-                            <td className="">
-                                <i className="fa fa-check"/>
-                            </td>
-                            <td className="">
-                                <i className="fa fa-check"/>
-                            </td>
-                        </tr>
-                        <tr>
-                            <td>
-                                Reading statistics
-                            </td>
-
-                            <td className="">
-                            </td>
-                            <td className="">
-                                <i className="fa fa-check"/>
-                            </td>
-                            <td className="">
-                                <i className="fa fa-check"/>
-                            </td>
-                        </tr>
-                        <tr>
-                            <td>
-                                Support
-                            </td>
-
-                            <td className="">
-                                <span className="feature-na">---</span>
-                            </td>
-                            <td className="">
-                                <i className="fa fa-check"/>
-                            </td>
-                            <td className="">
-                                <i className="fa fa-check"/>
-                            </td>
-                        </tr>
-
-                        </tbody>
-                    </table>
-
-                <div className="m-2"
-                     style={{display: 'flex'}}>
-
-                    <div className="ml-auto">
-                        <CancelSubscriptionButton/>
-                    </div>
-
-                </div>
-
-            </div>
-
-        </div>
-    );
-
-};
-
-
-export interface IProps {
-    readonly plan: Billing.Plan;
-    readonly userInfo?: UserInfo;
-    readonly interval: PlanInterval;
-    readonly togglePlanInterval: () => void;
-}
-
diff --git a/apps/repository/js/premium/PremiumScreen.tsx b/apps/repository/js/premium/PremiumScreen.tsx
deleted file mode 100644
index 7485e583f..000000000
--- a/apps/repository/js/premium/PremiumScreen.tsx
+++ /dev/null
@@ -1,32 +0,0 @@
-import * as React from 'react';
-import {FixedNav, FixedNavBody} from '../FixedNav';
-import {RepoFooter} from "../repo_footer/RepoFooter";
-import {PremiumStoreProvider} from './PremiumStore';
-import {PremiumContent2} from "./PremiumContent2";
-import { PremiumContent } from './PremiumContent';
-
-export const PremiumScreen = () => {
-
-    return (
-        <PremiumStoreProvider>
-            <FixedNav id="doc-repository">
-
-                <FixedNavBody className="container-fluid">
-
-                    <div className="row">
-
-                        <div className="col-lg-12 w-100 pt-4">
-                            <PremiumContent2/>
-                        </div>
-                    </div>
-
-                </FixedNavBody>
-
-                <RepoFooter/>
-
-            </FixedNav>
-        </PremiumStoreProvider>
-
-    );
-};
-
diff --git a/apps/repository/js/premium/PremiumStore.tsx b/apps/repository/js/premium/PremiumStore.tsx
deleted file mode 100644
index 205de7221..000000000
--- a/apps/repository/js/premium/PremiumStore.tsx
+++ /dev/null
@@ -1,61 +0,0 @@
-import React from 'react';
-import {
-    createObservableStore,
-    SetStore
-} from "../../../../web/js/react/store/ObservableStore";
-import {Provider} from "polar-shared/src/util/Providers";
-import {PlanInterval} from "./PremiumContent";
-
-interface IPremiumStore {
-    readonly interval: PlanInterval;
-}
-
-interface IPremiumCallbacks {
-
-    readonly setInterval: (interval: PlanInterval) => void;
-
-    readonly toggleInterval: () => void;
-
-}
-
-const initialStore: IPremiumStore = {
-    interval: 'month'
-}
-
-interface Mutator {
-
-}
-
-function mutatorFactory(storeProvider: Provider<IPremiumStore>,
-                        setStore: SetStore<IPremiumStore>): Mutator {
-
-    return {};
-
-}
-
-function callbacksFactory(storeProvider: Provider<IPremiumStore>,
-                          setStore: (store: IPremiumStore) => void,
-                          mutator: Mutator): IPremiumCallbacks {
-
-    function setInterval(interval: PlanInterval) {
-        const store = storeProvider();
-        setStore({...store, interval});
-    }
-
-    function toggleInterval() {
-        const store = storeProvider();
-        const interval = store.interval === 'month' ? 'year' : 'month'
-        setStore({...store, interval});
-    }
-
-    return {
-        setInterval, toggleInterval
-    };
-
-}
-export const [PremiumStoreProvider, usePremiumStore, usePremiumCallbacks, usePremiumMutator]
-    = createObservableStore<IPremiumStore, Mutator, IPremiumCallbacks>({
-        initialValue: initialStore,
-        mutatorFactory,
-        callbacksFactory
-    });
diff --git a/apps/repository/js/premium/PricingContent.tsx b/apps/repository/js/premium/PricingContent.tsx
new file mode 100644
index 000000000..455986696
--- /dev/null
+++ b/apps/repository/js/premium/PricingContent.tsx
@@ -0,0 +1,13 @@
+import React from "react";
+import {DeviceRouter} from "../../../../web/js/ui/DeviceRouter";
+import {PricingContentForMobile} from "./PricingContentForMobile";
+import {PricingContentForDesktop} from "./PricingContentForDesktop";
+
+export const PricingContent = () => {
+
+  return (
+      <DeviceRouter handheld={<PricingContentForMobile/>}
+                    desktop={<PricingContentForDesktop/>}/>
+  );
+
+}
diff --git a/apps/repository/js/premium/PricingContentForDesktop.tsx b/apps/repository/js/premium/PricingContentForDesktop.tsx
new file mode 100644
index 000000000..e2aba6ffd
--- /dev/null
+++ b/apps/repository/js/premium/PricingContentForDesktop.tsx
@@ -0,0 +1,256 @@
+import React from "react";
+import {Box, Divider, makeStyles, Paper} from "@material-ui/core";
+import {DeviceRouter} from "../../../../web/js/ui/DeviceRouter";
+import {FATimesCircleIcon} from "../../../../web/js/mui/MUIFontAwesome";
+import {PremiumButton} from "./PremiumButton";
+import {PlanCheckIcon} from "./PlanCheckIcon";
+import {PlanPricing} from "./PlanPricing";
+import {PricingFAQ} from "./PricingFAQ";
+import {PlanIntervalToggle} from "./PlanIntervalToggle";
+import { usePricingStore } from "./PricingStore";
+import {Billing} from "polar-accounts/src/Billing";
+import V2PlanPlus = Billing.V2PlanPlus;
+import V2PlanPro = Billing.V2PlanPro;
+import V2PlanFree = Billing.V2PlanFree;
+
+const useStyles = makeStyles({
+
+  checkCircle: {
+    maxHeight: "24px",
+  },
+
+  header: {
+    fontFamily: "Roboto",
+    fontStyle: "normal",
+    fontWeight: "normal",
+    // fontSize: "min(28px, 2.5vw)",
+    fontSize: "28px",
+    lineHeight: "33px",
+    marginTop: "40px",
+    // margin: "20px 0",
+  },
+
+  tableDesktop: {
+    fontSize: '16px',
+    margin: "10px auto 10px auto",
+    mixBlendMode: "normal",
+    width: "80%",
+    textAlign: "center",
+    borderCollapse: "collapse",
+    paddingRight: "25px",
+  },
+
+  imgBox: {
+    margin: "0 auto",
+    display: "flex",
+    justifyContent: "center",
+  },
+
+  buttonSignUp: {
+    textTransform: "none",
+    marginBottom: "8px",
+    backgroundColor: "#6754D6",
+    width: "9vw",
+    height: "45px",
+  },
+
+  rowHead: {
+    textAlign: "right",
+    padding: "7px 0px 7px 20px",
+  },
+
+  divider: {
+    marginLeft: "4%",
+    width: "92%",
+  },
+
+  row: {
+    height: "55px",
+    width: "65%",
+  },
+
+  pricing: {
+    fontStyle: "normal",
+    fontWeight: "bold",
+    fontSize: "32px",
+    lineHeight: "37px",
+
+    letterSpacing: "0.15px",
+
+    color: "#E0E0E0",
+    margin: "20px 0",
+  },
+
+  subtitle: {
+    fontStyle: "normal",
+    fontWeight: "normal",
+    fontSize: "1.2em",
+    lineHeight: "1.2em",
+    textAlign: "center",
+    letterSpacing: "0.15px",
+    color: "#E0E0E0",
+    paddingBottom: "10%",
+  },
+
+});
+
+const TableRowDivider = React.memo(() => {
+
+  const classes = useStyles();
+
+  return (
+      <tr>
+        <td colSpan={5}>
+          <Divider className={classes.divider} />
+        </td>
+      </tr>
+  );
+
+});
+
+const DesktopTable = () => {
+
+  const classes = useStyles();
+  const {interval} = usePricingStore(['interval']);
+
+  return (
+      <Paper className={classes.tableDesktop}>
+        <table>
+          <tbody>
+          <tr style={{ height: "100px", verticalAlign: "top" }}>
+            <th style={{ width: "12%" }}>
+              <div className="mt-2 mb-2">
+              </div>
+            </th>
+            <th style={{ width: "22%" }}>
+              <Box className={classes.header}>Free</Box>
+              <Box className={classes.pricing}>
+                <PlanPricing plan='free'/>
+              </Box>
+              {/*<Button className={classes.buttonSignUp}>Get Started</Button>*/}
+            </th>
+            <th style={{ width: "22%" }}>
+              <Box className={classes.header}>Plus</Box>
+              <Box className={classes.pricing}>
+                <PlanPricing plan='plus'/>
+              </Box>
+
+            </th>
+            <th style={{ width: "22%" }}>
+              <Box className={classes.header}>Pro</Box>
+              <Box className={classes.pricing}>
+                <PlanPricing plan='pro'/>
+              </Box>
+
+            </th>
+          </tr>
+
+          <tr>
+            <td></td>
+            <td>
+              <PremiumButton newSubscription={{plan: V2PlanFree, interval}} />
+            </td>
+            <td>
+              <PremiumButton newSubscription={{plan: V2PlanPlus, interval}} />
+            </td>
+            <td>
+              <PremiumButton newSubscription={{plan: V2PlanPro, interval}} />
+            </td>
+          </tr>
+
+          <TableRowDivider/>
+
+          <tr className={classes.row}>
+            <td className={classes.rowHead}>Storage</td>
+            <td>1 GB</td>
+            <td>50 GB</td>
+            <td>500 GB</td>
+          </tr>
+          <TableRowDivider/>
+          <tr className={classes.row}>
+            <td className={classes.rowHead}>
+              Maximum Captured <br /> Web Documents
+            </td>
+            <td>250</td>
+            <td>unlimited</td>
+            <td>unlimited</td>
+          </tr>
+          <TableRowDivider/>
+          <tr className={classes.row}>
+            <td className={classes.rowHead}>Devices</td>
+            <td>2</td>
+            <td>3</td>
+            <td>unlimited</td>
+          </tr>
+          <TableRowDivider/>
+          <tr className={classes.row}>
+            <td className={classes.rowHead}>Priority Support</td>
+            <td>
+              <Box className={classes.imgBox}>
+                <FATimesCircleIcon className={classes.checkCircle} />
+              </Box>
+            </td>
+            <td>
+              <Box className={classes.imgBox}>
+                <PlanCheckIcon/>
+              </Box>
+            </td>
+            <td>
+              <Box className={classes.imgBox}>
+                <PlanCheckIcon/>
+              </Box>
+            </td>
+          </tr>
+          <TableRowDivider/>
+          <tr className={classes.row}>
+            <td className={classes.rowHead}>Related Tags</td>
+            <td>
+              <Box className={classes.imgBox}>
+                <FATimesCircleIcon className={classes.checkCircle} />
+              </Box>
+            </td>
+            <td>
+              <Box className={classes.imgBox}>
+                <PlanCheckIcon/>
+              </Box>
+            </td>
+            <td>
+              <Box className={classes.imgBox}>
+                <PlanCheckIcon/>
+              </Box>
+            </td>
+          </tr>
+          <tr style={{ height: "50px" }}></tr>
+          </tbody>
+        </table>
+      </Paper>
+  );
+}
+
+export const PricingContentForDesktop = () => {
+
+  return (
+      <div style={{
+               display: 'flex',
+               flexDirection: 'column'
+           }}>
+
+        <div style={{margin: '1em auto 1em auto'}}>
+          <h1>Plans and Pricing</h1>
+        </div>
+
+        <div style={{margin: '1em auto 1em auto'}}>
+          <PlanIntervalToggle/>
+        </div>
+
+        <div style={{}}>
+          <DesktopTable/>
+        </div>
+
+        <div className="ml-auto mr-auto">
+          <PricingFAQ/>
+        </div>
+
+      </div>
+  );
+}
diff --git a/apps/repository/js/premium/PricingContentForMobile.tsx b/apps/repository/js/premium/PricingContentForMobile.tsx
new file mode 100644
index 000000000..52b353af7
--- /dev/null
+++ b/apps/repository/js/premium/PricingContentForMobile.tsx
@@ -0,0 +1,249 @@
+import React from "react";
+import {Box, Divider, makeStyles, Paper} from "@material-ui/core";
+import {DeviceRouter} from "../../../../web/js/ui/DeviceRouter";
+import {FATimesCircleIcon} from "../../../../web/js/mui/MUIFontAwesome";
+import {PremiumButton} from "./PremiumButton";
+import {PlanCheckIcon} from "./PlanCheckIcon";
+import {PlanPricing} from "./PlanPricing";
+import {PricingFAQ} from "./PricingFAQ";
+import {PlanIntervalToggle} from "./PlanIntervalToggle";
+import { usePricingStore } from "./PricingStore";
+import {Billing} from "polar-accounts/src/Billing";
+import V2PlanPlus = Billing.V2PlanPlus;
+import V2PlanPro = Billing.V2PlanPro;
+import {Plans} from "polar-accounts/src/Plans";
+import V2Plan = Billing.V2Plan;
+import V2PlanFree = Billing.V2PlanFree;
+
+const useStyles = makeStyles({
+  checkCircle: {
+    maxHeight: "24px",
+  },
+
+  headerMobile: {
+    fontFamily: "Roboto",
+    fontStyle: "normal",
+    fontWeight: "normal",
+    fontSize: "38px",
+    lineHeight: "33px",
+    marginTop: "30px",
+  },
+
+  imgBox: {
+    margin: "0 auto",
+    display: "flex",
+    justifyContent: "center",
+  },
+
+  divider: {
+    marginLeft: "4%",
+    width: "92%",
+  },
+  row: {
+    height: "55px",
+  },
+
+  pricing: {
+    fontStyle: "normal",
+    fontWeight: "bold",
+    fontSize: "32px",
+    lineHeight: "37px",
+    letterSpacing: "0.15px",
+    color: "#E0E0E0",
+    margin: "20px 0",
+  },
+
+  rate: {
+    fontStyle: "normal",
+    fontWeight: "bold",
+    fontSize: "12px",
+    lineHeight: "14px",
+    letterSpacing: "0.15px",
+    color: "#E0E0E0",
+  },
+
+  subtitleMobile: {
+    fontStyle: "normal",
+    fontWeight: "normal",
+    fontSize: "16px",
+    lineHeight: "19px",
+
+    textAlign: "center",
+    letterSpacing: "0.15px",
+    marginTop: "5px",
+    color: "#E0E0E0",
+    paddingBottom: "8%",
+  },
+
+  rowHeadMobile: {
+    textAlign: "left",
+  },
+
+  pricePlanMobile: {
+    mixBlendMode: "normal",
+    display: "flex",
+    flexDirection: "column",
+    alignItems: "center",
+    width: "300px",
+    margin: "5px",
+  },
+
+  tableMobile: {
+    mixBlendMode: "normal",
+    borderCollapse: "collapse",
+    textAlign: "center",
+    fontSize: "16px",
+    width: '100%',
+    marginLeft: '1rem',
+    marginRight: '1rem',
+  },
+});
+
+interface CheckRowProps {
+  readonly name: string;
+  readonly checked: boolean;
+}
+
+const CheckRow = (props: CheckRowProps) => {
+
+  const classes = useStyles();
+
+  return (
+      <tr className={classes.row}>
+        <td className={classes.rowHeadMobile}>
+          {props.name}
+        </td>
+        <td>
+          <Box className={classes.imgBox}>
+
+            {props.checked && (
+                <PlanCheckIcon/>
+            )}
+
+            {! props.checked && (
+                <FATimesCircleIcon className={classes.checkCircle} />
+            )}
+
+          </Box>
+        </td>
+      </tr>
+
+  );
+}
+
+interface PlanBoxProps {
+  readonly name: string;
+  readonly plan: V2Plan;
+  readonly interval: Billing.Interval;
+  readonly subtitle: string | React.ReactNode;
+  readonly storage: string;
+  readonly maxCapturedWebDocuments: number | 'unlimited';
+  readonly maxDevices: number | 'unlimited';
+  readonly support: boolean;
+  readonly relatedTags: boolean;
+}
+
+const PlanBox = (props: PlanBoxProps) => {
+
+  const classes = useStyles();
+
+  return (
+      <Paper elevation={1} style={{margin: '1rem'}}>
+
+        <Box className={classes.pricePlanMobile}>
+          <Box className={classes.pricing}>{props.name}</Box>
+          <Box className={classes.subtitleMobile}>
+            {props.subtitle}
+          </Box>
+
+          <Box className={classes.pricing}>
+            <PlanPricing plan={props.plan.level}/>
+          </Box>
+
+          <PremiumButton newSubscription={{plan: props.plan, interval: props.interval}} />
+
+          <table className={classes.tableMobile}>
+            <tr className={classes.row}>
+              <td className={classes.rowHeadMobile}>
+                Storage
+              </td>
+              <td>{props.storage}</td>
+            </tr>
+            <tr className={classes.row}>
+              <td className={classes.rowHeadMobile}>
+                Maximum Captured <br /> Web Documents
+              </td>
+              <td>
+                {props.maxCapturedWebDocuments}
+              </td>
+            </tr>
+            <tr className={classes.row}>
+              <td className={classes.rowHeadMobile}>
+                Devices
+              </td>
+              <td>
+                {props.maxDevices}
+              </td>
+            </tr>
+
+            <CheckRow name="Priority Support" checked={props.support}/>
+            <CheckRow name="Related Tags" checked={props.relatedTags}/>
+
+          </table>
+        </Box>
+      </Paper>
+  );
+}
+
+export const PricingContentForMobile = () => {
+
+  const {interval} = usePricingStore(['interval']);
+
+  return (
+    <Box
+      style={{
+        display: "flex",
+        // flexDirection: "column",
+        alignItems: "center",
+        justifyContent: "center",
+        flexWrap: "wrap",
+        marginBottom: "40px",
+      }}>
+
+      <div style={{margin: '1em auto 1em auto'}}>
+        <PlanIntervalToggle/>
+      </div>
+
+      <PlanBox name="Free"
+               plan={V2PlanFree}
+               interval={interval}
+               subtitle="Free Forever"
+               storage="1 GB"
+               maxCapturedWebDocuments={250}
+               maxDevices={2}
+               support={false}
+               relatedTags={false}/>
+
+      <PlanBox name="Plus"
+               plan={V2PlanPlus}
+               interval={interval}
+               subtitle={<>1 year commitment <br /> gets one month free</>}
+               storage="50 GB"
+               maxCapturedWebDocuments="unlimited"
+               maxDevices="unlimited"
+               support={true}
+               relatedTags={true}/>
+
+      <PlanBox name="Pro"
+               plan={V2PlanPro}
+               interval={interval}
+               subtitle={<>1 year commitment <br /> gets one month free</>}
+               storage="500 GB"
+               maxCapturedWebDocuments="unlimited"
+               maxDevices="unlimited"
+               support={true}
+               relatedTags={true}/>
+
+    </Box>
+  );
+}
diff --git a/apps/repository/js/premium/PricingFAQ.tsx b/apps/repository/js/premium/PricingFAQ.tsx
index e47718858..c1bd8b5b9 100644
--- a/apps/repository/js/premium/PricingFAQ.tsx
+++ b/apps/repository/js/premium/PricingFAQ.tsx
@@ -5,12 +5,13 @@ const useStyles = makeStyles({
 
   root: {
       fontSize: '1.4em',
-      maxWidth: '800px'
+      maxWidth: '800px',
+      marginLeft: 'auto',
+      marginRight: 'auto'
   },
 
 });
 
-
 export const PricingFAQ = React.memo(() => {
 
     const classes = useStyles();
diff --git a/apps/repository/js/premium/PricingScreen.tsx b/apps/repository/js/premium/PricingScreen.tsx
new file mode 100644
index 000000000..a9d0b2141
--- /dev/null
+++ b/apps/repository/js/premium/PricingScreen.tsx
@@ -0,0 +1,34 @@
+import * as React from 'react';
+import {FixedNav, FixedNavBody} from '../FixedNav';
+import {RepoFooter} from "../repo_footer/RepoFooter";
+import {PricingStoreProvider} from './PricingStore';
+import {PricingContent} from "./PricingContent";
+import {DefaultChangePlanContextProvider} from "./actions/DefaultChangePlanContextProvider";
+
+export const PricingScreen = () => {
+
+    return (
+        <PricingStoreProvider>
+            <DefaultChangePlanContextProvider>
+                <FixedNav id="doc-repository">
+
+                    <FixedNavBody className="container-fluid">
+
+                        <div className="row">
+
+                            <div className="col-lg-12 w-100 pt-4">
+                                <PricingContent/>
+                            </div>
+                        </div>
+
+                    </FixedNavBody>
+
+                    <RepoFooter/>
+
+                </FixedNav>
+            </DefaultChangePlanContextProvider>
+        </PricingStoreProvider>
+
+    );
+};
+
diff --git a/apps/repository/js/premium/PricingStore.tsx b/apps/repository/js/premium/PricingStore.tsx
new file mode 100644
index 000000000..2230d0128
--- /dev/null
+++ b/apps/repository/js/premium/PricingStore.tsx
@@ -0,0 +1,61 @@
+import React from 'react';
+import {
+    createObservableStore,
+    SetStore
+} from "../../../../web/js/react/store/ObservableStore";
+import {Provider} from "polar-shared/src/util/Providers";
+import {Billing} from "polar-accounts/src/Billing";
+
+interface IPricingStore {
+    readonly interval: Billing.Interval;
+}
+
+interface IPricingCallbacks {
+
+    readonly setInterval: (interval: Billing.Interval) => void;
+
+    readonly toggleInterval: () => void;
+
+}
+
+const initialStore: IPricingStore = {
+    interval: 'month'
+}
+
+interface Mutator {
+
+}
+
+function mutatorFactory(storeProvider: Provider<IPricingStore>,
+                        setStore: SetStore<IPricingStore>): Mutator {
+
+    return {};
+
+}
+
+function callbacksFactory(storeProvider: Provider<IPricingStore>,
+                          setStore: (store: IPricingStore) => void,
+                          mutator: Mutator): IPricingCallbacks {
+
+    function setInterval(interval: Billing.Interval) {
+        const store = storeProvider();
+        setStore({...store, interval});
+    }
+
+    function toggleInterval() {
+        const store = storeProvider();
+        const interval = store.interval === 'month' ? 'year' : 'month'
+        setStore({...store, interval});
+    }
+
+    return {
+        setInterval, toggleInterval
+    };
+
+}
+export const [PricingStoreProvider, usePricingStore, usePricingCallbacks, usePricingMutator]
+    = createObservableStore<IPricingStore, Mutator, IPricingCallbacks>({
+        initialValue: initialStore,
+        mutatorFactory,
+        callbacksFactory
+    });
diff --git a/apps/repository/js/premium/actions/ChangePlanAction.tsx b/apps/repository/js/premium/actions/ChangePlanAction.tsx
new file mode 100644
index 000000000..b370b6431
--- /dev/null
+++ b/apps/repository/js/premium/actions/ChangePlanAction.tsx
@@ -0,0 +1,24 @@
+import * as React from 'react';
+import {Billing} from "polar-accounts/src/Billing";
+
+export type ChangePlanAction = (newSubscription: Billing.V2Subscription) => void;
+
+interface IChangePlanContext {
+
+    readonly type: 'change' | 'buy';
+
+    readonly action: ChangePlanAction;
+
+    /**
+     * The subscription is undefined if we are outside of the app.
+     */
+    readonly subscription: Billing.V2Subscription | undefined;
+
+}
+
+export const ChangePlanActionContext = React.createContext<IChangePlanContext>(null!);
+
+export function useChangePlanActionContext() {
+    return React.useContext(ChangePlanActionContext);
+}
+
diff --git a/apps/repository/js/premium/actions/DefaultChangePlanContextProvider.tsx b/apps/repository/js/premium/actions/DefaultChangePlanContextProvider.tsx
new file mode 100644
index 000000000..fa3445c83
--- /dev/null
+++ b/apps/repository/js/premium/actions/DefaultChangePlanContextProvider.tsx
@@ -0,0 +1,93 @@
+import * as React from 'react';
+import {AccountActions} from "../../../../../web/js/accounts/AccountActions";
+import {useDialogManager} from "../../../../../web/js/mui/dialogs/MUIDialogControllers";
+import {Billing} from 'polar-accounts/src/Billing';
+import {useLogger} from "../../../../../web/js/mui/MUILogger";
+import {ChangePlanActionContext} from "./ChangePlanAction";
+import {deepMemo} from "../../../../../web/js/react/ReactUtils";
+import {
+    useUserInfoContext,
+    useUserSubscriptionContext
+} from "../../../../../web/js/apps/repository/auth_handler/UserInfoProvider";
+import {useStripeCheckout} from "./UseStripeCheckout";
+
+function useAction() {
+
+    const dialogManager = useDialogManager();
+    const log = useLogger();
+    const userInfoContext = useUserInfoContext();
+    const currentSubscription = useUserSubscriptionContext();
+    const stripeCheckout = useStripeCheckout();
+
+    return React.useCallback((newSubscription: Billing.V2Subscription) => {
+
+        console.log("Attempting to change to ", newSubscription);
+
+        const {interval, plan} = newSubscription;
+
+        const email = userInfoContext?.userInfo?.email!;
+
+        const buyHandler = () => {
+            // if we're buying a NEW product go ahead and redirect us to
+            // stripe and use their BUY package.  This is better than embedding
+            // the stripe SDK and also stripe ALSO needs to run over HTTPS
+
+            const doAsync = async () => {
+                dialogManager.snackbar({message: 'Creating payment method.  One moment... '});
+                await stripeCheckout(newSubscription, email);
+            }
+
+            doAsync().catch(err => log.error(err));
+
+        };
+
+        const changeHandler = () => {
+
+            const onAccept = () => {
+
+                dialogManager.snackbar({message: `Changing plan to ${plan.level} billed at interval ${interval}.  One moment...`});
+
+                AccountActions.changePlan(plan.level, interval)
+                    .catch(err => log.error("Unable to upgrade plan: ", err));
+
+            };
+
+            dialogManager.confirm({
+                title: `Are you sure you want to change to ${plan.level} (${interval})?`,
+                subtitle: 'Your billing will automatically be updated and account pro-rated.',
+                type: 'warning',
+                onAccept
+            });
+
+        }
+
+        const buyingNewPlan = currentSubscription.plan.level === 'free';
+
+        if (buyingNewPlan) {
+            buyHandler();
+        } else {
+            changeHandler();
+        }
+
+    }, [dialogManager, log, userInfoContext, currentSubscription, stripeCheckout]);
+
+}
+
+interface IProps {
+    readonly children: React.ReactNode;
+}
+
+export const DefaultChangePlanContextProvider = deepMemo((props: IProps) => {
+
+    const type = 'change';
+    const action = useAction();
+    const subscription = useUserSubscriptionContext();
+
+    return (
+        <ChangePlanActionContext.Provider value={{type, action, subscription}}>
+            {props.children}
+        </ChangePlanActionContext.Provider>
+    )
+
+});
+
diff --git a/apps/repository/js/premium/actions/NullChangePlanContextProvider.tsx b/apps/repository/js/premium/actions/NullChangePlanContextProvider.tsx
new file mode 100644
index 000000000..fbec177b4
--- /dev/null
+++ b/apps/repository/js/premium/actions/NullChangePlanContextProvider.tsx
@@ -0,0 +1,39 @@
+import * as React from 'react';
+import {AccountActions} from "../../../../../web/js/accounts/AccountActions";
+import {useDialogManager} from "../../../../../web/js/mui/dialogs/MUIDialogControllers";
+import {Billing} from 'polar-accounts/src/Billing';
+import {useLogger} from "../../../../../web/js/mui/MUILogger";
+import {ChangePlanActionContext} from "./ChangePlanAction";
+import {deepMemo} from "../../../../../web/js/react/ReactUtils";
+import {Nav} from "../../../../../web/js/ui/util/Nav";
+import {
+    useUserInfoContext,
+    useUserSubscriptionContext
+} from "../../../../../web/js/apps/repository/auth_handler/UserInfoProvider";
+
+function useAction() {
+
+    return React.useCallback((newSubscription: Billing.V2Subscription) => {
+        document.location.href = `https://app.getpolarized.io/plans?plan=${newSubscription.plan.level}&interval=${newSubscription.interval}`;
+    }, []);
+
+}
+
+interface IProps {
+    readonly children: React.ReactNode;
+}
+
+export const NullChangePlanContextProvider = deepMemo((props: IProps) => {
+
+    const type = 'buy';
+    const action = useAction();
+    const subscription = undefined;
+    
+    return (
+        <ChangePlanActionContext.Provider value={{type, action, subscription}}>
+            {props.children}
+        </ChangePlanActionContext.Provider>
+    )
+
+});
+
diff --git a/apps/repository/js/premium/actions/UseStripeCheckout.tsx b/apps/repository/js/premium/actions/UseStripeCheckout.tsx
new file mode 100644
index 000000000..e798827b2
--- /dev/null
+++ b/apps/repository/js/premium/actions/UseStripeCheckout.tsx
@@ -0,0 +1,44 @@
+import * as React from 'react';
+import { Billing } from 'polar-accounts/src/Billing';
+import {IDStr} from "polar-shared/src/util/Strings";
+import { URLs } from 'polar-shared/src/util/URLs';
+import { StripeUtils } from '../../stripe/StripeUtils';
+
+async function startStripeSession(newSubscription: Billing.V2Subscription, email: string): Promise<IDStr> {
+
+    const mode = StripeUtils.stripeMode();
+    const params = {
+        plan: newSubscription.plan.level,
+        interval: newSubscription.interval,
+        email,
+        mode
+    }
+
+    const url = URLs.create({
+        base: StripeUtils.createURL('/StripeCreateSession'),
+        params
+    });
+
+    const response = await fetch(url, {mode: "cors"});
+    const json = await response.json();
+
+    return json.id;
+
+}
+
+export function useStripeCheckout() {
+
+    return React.useCallback(async (newSubscription: Billing.V2Subscription, email: string) => {
+
+        const stripe = await StripeUtils.createStripe();
+
+        if (! stripe) {
+            throw new Error("No stripe");
+        }
+
+        const sessionId = await startStripeSession(newSubscription, email);
+        stripe.redirectToCheckout({sessionId})
+
+    }, []);
+
+}
\ No newline at end of file
diff --git a/apps/repository/js/repo_header/RepoHeader3.tsx b/apps/repository/js/repo_header/RepoHeader3.tsx
index 23e3d75af..56a310e6f 100644
--- a/apps/repository/js/repo_header/RepoHeader3.tsx
+++ b/apps/repository/js/repo_header/RepoHeader3.tsx
@@ -122,7 +122,7 @@ const Desktop = () => {
 
                     <MUIButtonBar>
 
-                        <ChromeExtensionInstallButton/>
+                        {/*<ChromeExtensionInstallButton/>*/}
 
                         <CloudConnectivityButton/>
 
diff --git a/apps/repository/js/splash2/whats_new/WhatsNew.ts b/apps/repository/js/splash2/whats_new/WhatsNew.ts
index e44e87770..1cc428a96 100644
--- a/apps/repository/js/splash2/whats_new/WhatsNew.ts
+++ b/apps/repository/js/splash2/whats_new/WhatsNew.ts
@@ -1,9 +1,6 @@
-import {LifecycleToggle} from '../../../../../web/js/ui/util/LifecycleToggle';
 import {LifecycleEvents} from '../../../../../web/js/ui/util/LifecycleEvents';
 import {Version} from 'polar-shared/src/util/Version';
-import {Logger} from 'polar-shared/src/logger/Logger';
-
-const log = Logger.create();
+import {LocalPrefs} from "../../../../../web/js/util/LocalPrefs";
 
 export namespace WhatsNew {
 
@@ -17,10 +14,10 @@ export namespace WhatsNew {
         // by default we set the prevVersion to the current version so on the
         // initial install we don't get a whats new dialog box.
         const prevVersion =
-            LifecycleToggle.get(LifecycleEvents.WHATS_NEW_VERSION)
+            LocalPrefs.get(LifecycleEvents.WHATS_NEW_VERSION)
                 .getOrElse(version);
 
-        log.debug("Comparing versions: ", {version, prevVersion});
+        console.debug("Comparing versions: ", {version, prevVersion});
 
         // TODO: this needs semver... from WhatsNewComponent (which is now deprecated)
         return prevVersion !== version;
@@ -31,9 +28,9 @@ export namespace WhatsNew {
 
         const version = Version.get();
 
-        log.debug("Marking version shown: " + version);
+        console.debug("Marking version shown: " + version);
 
-        LifecycleToggle.set(LifecycleEvents.WHATS_NEW_VERSION, version);
+        LocalPrefs.set(LifecycleEvents.WHATS_NEW_VERSION, version);
 
     }
 
diff --git a/apps/repository/js/splash2/whats_new/WhatsNewDialog.tsx b/apps/repository/js/splash2/whats_new/WhatsNewDialog.tsx
index 9c363e485..957c681f0 100644
--- a/apps/repository/js/splash2/whats_new/WhatsNewDialog.tsx
+++ b/apps/repository/js/splash2/whats_new/WhatsNewDialog.tsx
@@ -15,11 +15,9 @@ export const WhatsNewDialog = React.memo(() => {
 
     return (
 
-        <Dialog
-            fullWidth={true}
-            maxWidth='lg'
-            open={open}
-            onClose={handleClose}>
+        <Dialog maxWidth='lg'
+                open={open}
+                onClose={handleClose}>
 
             <DialogContent>
                 <WhatsNewContent/>
diff --git a/apps/repository/js/stripe/StripeUtils.ts b/apps/repository/js/stripe/StripeUtils.ts
new file mode 100644
index 000000000..6459e8383
--- /dev/null
+++ b/apps/repository/js/stripe/StripeUtils.ts
@@ -0,0 +1,42 @@
+import {loadStripe} from '@stripe/stripe-js';
+
+export namespace StripeUtils {
+
+    export type StripeMode = 'test' | 'live';
+
+    export function createURL(path: string) {
+
+        function createHost() {
+
+            switch (StripeUtils.stripeMode()) {
+                case "test":
+                    return 'us-central1-polar-cors-beta.cloudfunctions.net'
+                case "live":
+                    return 'us-central1-polar-cors.cloudfunctions.net'
+            }
+
+        }
+
+        const host = createHost();
+
+        return `https://${host}${path}`;
+
+    }
+
+    export function stripeMode(): StripeMode {
+
+        const stripeApiKey = getStripeAPIKey();
+        return stripeApiKey.startsWith("pk_test_") ? 'test' : 'live';
+
+    }
+
+    export function getStripeAPIKey(): string {
+        return localStorage.getItem('stripe_api_key') || 'pk_live_nuUlFGZzCqFCnx19rAfGBO9900Fx3Mpi3m';
+    }
+
+    export async function createStripe() {
+        const stripeApiKey = getStripeAPIKey();
+        return await loadStripe(stripeApiKey);
+    }
+
+}
\ No newline at end of file
diff --git a/apps/repository/js/ui/AddContentButton.tsx b/apps/repository/js/ui/AddContentButton.tsx
index fef77009d..de07afa17 100644
--- a/apps/repository/js/ui/AddContentButton.tsx
+++ b/apps/repository/js/ui/AddContentButton.tsx
@@ -3,6 +3,7 @@ import Button from '@material-ui/core/Button';
 import AddIcon from '@material-ui/icons/Add';
 import {AddContentFab} from "./AddContentFab";
 import {useHistory} from 'react-router-dom';
+import {MUITooltip} from "../../../../web/js/mui/MUITooltip";
 
 export namespace AddContent {
 
@@ -31,17 +32,19 @@ export namespace AddContent {
         const doAdd = useAddFileDropzone();
 
         return (
-            <Button id="add-content-dropdown"
-                    variant="contained"
-                    color="primary"
-                    startIcon={<AddIcon/>}
-                    onClick={doAdd}
-                    style={{
-                        minWidth: '285px'
-                    }}
-                    size="large">
-                Add Document
-            </Button>
+            <MUITooltip title="Upload and add PDFs and EPUBs to your repository">
+                <Button id="add-content-dropdown"
+                        variant="contained"
+                        color="primary"
+                        startIcon={<AddIcon/>}
+                        onClick={doAdd}
+                        style={{
+                            minWidth: '285px'
+                        }}
+                        size="large">
+                    Add Document
+                </Button>
+            </MUITooltip>
         );
     };
 
diff --git a/apps/repository/js/ui/AddContentMenuItem.tsx b/apps/repository/js/ui/AddContentMenuItem.tsx
index ca5a90aa5..4317b2133 100644
--- a/apps/repository/js/ui/AddContentMenuItem.tsx
+++ b/apps/repository/js/ui/AddContentMenuItem.tsx
@@ -4,6 +4,7 @@ import MenuItem from '@material-ui/core/MenuItem';
 import ListItemIcon from "@material-ui/core/ListItemIcon";
 import SendIcon from "@material-ui/icons/Send";
 import ListItemText from "@material-ui/core/ListItemText";
+import {MUITooltip} from "../../../../web/js/mui/MUITooltip";
 
 export class AddContentMenuItem extends React.PureComponent<IProps, IState> {
 
@@ -20,8 +21,7 @@ export class AddContentMenuItem extends React.PureComponent<IProps, IState> {
 
         return (
 
-            <Tooltip title={this.props.tooltip}
-                     placement="right">
+            <MUITooltip title={this.props.tooltip}>
 
                 <MenuItem id={this.props.id}
                           onClick={() => this.props.onClick()}>
@@ -35,7 +35,7 @@ export class AddContentMenuItem extends React.PureComponent<IProps, IState> {
 
                 </MenuItem>
 
-            </Tooltip>
+            </MUITooltip>
 
         );
 
diff --git a/apps/repository/js/ui/FeedbackButton.tsx b/apps/repository/js/ui/FeedbackButton.tsx
new file mode 100644
index 000000000..cb28a3509
--- /dev/null
+++ b/apps/repository/js/ui/FeedbackButton.tsx
@@ -0,0 +1,63 @@
+import React from "react";
+import {createStyles, makeStyles, Theme} from "@material-ui/core/styles";
+import Fab from "@material-ui/core/Fab";
+import ChatBubbleIcon from '@material-ui/icons/ChatBubble';
+import {useNav} from "../../../../web/js/ui/util/NavHook";
+import { DeviceRouters } from "../../../../web/js/ui/DeviceRouter";
+import {useUserInfoContext} from "../../../../web/js/apps/repository/auth_handler/UserInfoProvider";
+import {Plans} from "polar-accounts/src/Plans";
+import {MUITooltip} from "../../../../web/js/mui/MUITooltip";
+
+const useStyles = makeStyles((theme: Theme) =>
+    createStyles({
+        root: {
+            position: 'absolute',
+            bottom: theme.spacing(3),
+            right: theme.spacing(3),
+            // color: theme.palette.text.secondary
+        },
+    }),
+);
+
+export function FeedbackButton() {
+
+    const classes = useStyles();
+    const linkLoader = useNav();
+    const userInfoContext = useUserInfoContext();
+
+    const handleFeedback = React.useCallback(() => {
+
+        const email = userInfoContext?.userInfo?.email;
+
+        if (! email) {
+            return;
+        }
+
+        const plan = Plans.toV2(userInfoContext?.userInfo?.subscription.plan).level;
+        const interval = userInfoContext?.userInfo?.subscription.interval || 'monthly';
+
+        const params = {
+            email: encodeURIComponent(email),
+            plan,
+            interval
+        }
+
+        const url = `https://kevinburton1.typeform.com/to/lXUE4NmP#email=${params.email}&plan=${params.plan}&interval=${params.interval}`;
+
+        linkLoader(url, {newWindow: true, focus: true});
+
+    }, [linkLoader, userInfoContext]);
+
+    return (
+        <DeviceRouters.Desktop>
+            <MUITooltip title="Send us feedback to help improve Polar.">
+                <Fab color="primary"
+                     aria-label="Feedback"
+                     onClick={handleFeedback}
+                     className={classes.root}>
+                    <ChatBubbleIcon />
+                </Fab>
+            </MUITooltip>
+        </DeviceRouters.Desktop>
+    );
+}
diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md
index 3c12c05e0..554f7a825 100644
--- a/docs/CHANGELOG.md
+++ b/docs/CHANGELOG.md
@@ -1,4 +1,11 @@
 
+# 2.0.?
+
+- Remove trial text since we can't currently offer trials
+- 
+
+# ....
+
 - the cloze ID is computed from the text, not just an integer that's incremented
 
 # 2.0 Beta 30 (RC2)
diff --git a/package-lock.json b/package-lock.json
index 090cf1272..6cc3b6f28 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -1,6 +1,6 @@
 {
   "name": "polar-bookshelf",
-  "version": "2.0.0-beta.31",
+  "version": "2.0.40",
   "lockfileVersion": 1,
   "requires": true,
   "dependencies": {
diff --git a/package.json b/package.json
index 656f7cd54..e795b8ef7 100644
--- a/package.json
+++ b/package.json
@@ -1,15 +1,15 @@
 {
   "name": "polar-bookshelf",
-  "version": "2.0.0-beta.31",
+  "version": "2.0.40",
   "description": "Polar",
   "main": "web/js/electron/main.js",
   "private": true,
   "scripts": {
     "start": "electron .",
     "testit": "echo ./dist/polar-bookshelf_${npm_package_version}_amd64.snap",
+    "clean": "rm -rf web/dist && rm -rf dist/public && rm -rf .webpack-cache-loader && rm -rf .terser-webpack-plugin && rm -rf tsconfig.tsbuildinfo",
     "build-appx": "npm run-script setup-dist-appx && npm run-script compile && electron-builder --config=electron-builder.yml --win appx --publish never",
-    "build-electron": "rm -rf web/dist && rm -rf .webpack-cache-loader && npx tsc && export NODE_ENV=production && export WEBPACK_TARGET=electron-renderer && npm run-script webpack",
-    "build-webapp": "rm -rf web/dist && rm -rf dist/public && rm -rf .webpack-cache-loader && npx tsc && export NODE_ENV=production && export WEBPACK_TARGET=web && npm run-script webpack",
+    "build-webapp": "npm run-script clean && npx tsc && export NODE_ENV=production && export WEBPACK_TARGET=web && npm run-script webpack",
     "setup-dist-default": "npm run-script verify-electron-version && cp web/js/dist_config/DefaultDistConfig.ts web/js/dist_config/DistConfig.ts",
     "setup-dist-appx": "cp web/js/dist_config/AppXDistConfig.ts web/js/dist_config/DistConfig.ts",
     "publish-linux-snapcraft": "snapcraft push --release stable ./dist/polar-bookshelf-${npm_package_version}-amd64.snap",
@@ -48,7 +48,6 @@
   },
   "repository": "https://github.com/burtonator/polar-bookshelf",
   "keywords": [
-    "Electron",
     "PDF",
     "viewer",
     "PDF.js",
@@ -86,7 +85,7 @@
     "@types/mocha": "7.0.2",
     "@types/node": "12.12.32",
     "@types/prop-types": "~15.7.3",
-    "@types/react-helmet": "=6.0.0",
+    "@types/react-helmet": "=6.1.0",
     "@types/react-router-dom": "=5.1.5",
     "@types/react-virtualized": "=9.21.10",
     "@types/react-virtualized-auto-sizer": "=1.0.0",
@@ -103,7 +102,7 @@
     "dotenv": "^8.2.0",
     "dtsmake": "0.0.10",
     "electron": "=8.4.0",
-    "electron-builder": "~22.7.0",
+    "electron-builder": "~22.9.1",
     "electron-notarize": "1.0.0",
     "install": "^0.12.2",
     "jsdom": "16.2.2",
@@ -112,7 +111,7 @@
     "mocha-isolation": "~0.1.5",
     "mocha-junit-reporter": "^1.18.0",
     "node-sass": "=4.14.1",
-    "polar-webpack": "^2.0.0-beta.31",
+    "polar-webpack": "^2.0.40",
     "recursive-readdir": "~2.2.2",
     "spectron": "github:dsabanin/spectron",
     "summernote-typescript": "~0.8.9",
@@ -141,6 +140,7 @@
     "@nivo/pie": "=0.61.1",
     "@sentry/browser": "5.19.0",
     "@sentry/electron": "~1.3.0",
+    "@stripe/stripe-js": "=1.9.0",
     "@types/mousetrap": "=1.6.3",
     "amplitude-js": "^5.8.0",
     "babel-preset-es2017": "~6.24.1",
@@ -171,37 +171,37 @@
     "opencollective-postinstall": "~2.0.1",
     "path-to-regexp": "^3.0.0",
     "pdfjs-dist": "https://github.com/burtonator/package-polar-pdfjs-dist.git",
-    "polar-accounts": "^2.0.0-beta.31",
-    "polar-assets": "^2.0.0-beta.31",
-    "polar-backend-shared": "^2.0.0-beta.31",
-    "polar-browsers": "^2.0.0-beta.31",
-    "polar-content-capture": "^2.0.0-beta.31",
-    "polar-dom-text-search": "^2.0.0-beta.31",
-    "polar-epub": "^2.0.0-beta.31",
-    "polar-exporters": "^2.0.0-beta.31",
-    "polar-file-saver": "^2.0.0-beta.31",
-    "polar-firebase": "^2.0.0-beta.31",
-    "polar-google-fonts": "^2.0.0-beta.31",
-    "polar-html": "^2.0.0-beta.31",
+    "polar-accounts": "^2.0.40",
+    "polar-assets": "^2.0.40",
+    "polar-backend-shared": "^2.0.40",
+    "polar-browsers": "^2.0.40",
+    "polar-content-capture": "^2.0.40",
+    "polar-dom-text-search": "^2.0.40",
+    "polar-epub": "^2.0.40",
+    "polar-exporters": "^2.0.40",
+    "polar-file-saver": "^2.0.40",
+    "polar-firebase": "^2.0.40",
+    "polar-google-fonts": "^2.0.40",
+    "polar-html": "^2.0.40",
     "polar-loader": "1.0.3",
-    "polar-pagemarks-auto": "^2.0.0-beta.31",
-    "polar-pdf": "^2.0.0-beta.31",
-    "polar-react": "^2.0.0-beta.31",
-    "polar-release-metadata": "^2.0.0-beta.31",
-    "polar-shared": "^2.0.0-beta.31",
-    "polar-shared-webserver": "^2.0.0-beta.31",
-    "polar-spaced-repetition": "^2.0.0-beta.31",
-    "polar-spaced-repetition-api": "^2.0.0-beta.31",
-    "polar-text-highlighter": "^2.0.0-beta.31",
-    "polar-web-extension-api": "^2.0.0-beta.31",
-    "polar-webapp-links": "^2.0.0-beta.31",
+    "polar-pagemarks-auto": "^2.0.40",
+    "polar-pdf": "^2.0.40",
+    "polar-react": "^2.0.40",
+    "polar-release-metadata": "^2.0.40",
+    "polar-shared": "^2.0.40",
+    "polar-shared-webserver": "^2.0.40",
+    "polar-spaced-repetition": "^2.0.40",
+    "polar-spaced-repetition-api": "^2.0.40",
+    "polar-text-highlighter": "^2.0.40",
+    "polar-web-extension-api": "^2.0.40",
+    "polar-webapp-links": "^2.0.40",
     "prop-types": "~15.7.2",
     "react-async": "=10.0.1",
     "react-cookie-banner": "~4.0.0",
     "react-dropzone": "11.0.1",
     "react-fast-compare": "=3.0.1",
     "react-ga": "=2.5.6",
-    "react-helmet": "=6.0.0",
+    "react-helmet": "=6.1.0",
     "react-hotkeys": "=2.0.0",
     "react-joyride": "=2.2.1",
     "react-json-view": "~1.19.1",
diff --git a/web/js/accounts/AccountActions.ts b/web/js/accounts/AccountActions.ts
index f6b05282a..17d3c0209 100644
--- a/web/js/accounts/AccountActions.ts
+++ b/web/js/accounts/AccountActions.ts
@@ -5,6 +5,8 @@ import * as firebase from "firebase/app";
 import 'firebase/auth';
 import {LoginURLs} from "../apps/viewer/LoginURLs";
 import {Firestore} from "../firebase/Firestore";
+import {StripeMode} from "../../../../polar-app-private/polar-hooks/functions/impl/stripe/StripeUtils";
+import {StripeUtils} from "../../../apps/repository/js/stripe/StripeUtils";
 
 export namespace AccountActions {
 
@@ -21,19 +23,21 @@ export namespace AccountActions {
         window.location.href = LoginURLs.create();
     }
 
-
     export async function cancelSubscription() {
-        const url = `https://us-central1-polar-cors.cloudfunctions.net/StripeCancelSubscription/`;
-        const data = await createAccountData();
+        const url = StripeUtils.createURL(`/StripeCancelSubscription/`);
+        const accountData = await createAccountData();
+        const mode = StripeUtils.stripeMode();
+        const data: StripeCancelSubscriptionBody = {mode, ...accountData};
 
         await executeAccountMethod(url, data);
 
     }
 
     export async function changePlan(plan: Billing.V2PlanLevel, interval: Billing.Interval) {
-        const url = `https://us-central1-polar-cors.cloudfunctions.net/StripeChangePlan/`;
+        const url = StripeUtils.createURL(`/StripeChangePlan/`);
         const accountData = await createAccountData();
-        const data = {plan, interval, ...accountData};
+        const mode = StripeUtils.stripeMode();
+        const data: StripeChangePlanBody = {mode, plan, interval, ...accountData};
 
         await executeAccountMethod(url, data);
 
@@ -69,8 +73,8 @@ export namespace AccountActions {
         }
 
         return {
+            uid: user.uid,
             email: user.email!,
-            uid: user.uid
         };
 
     }
@@ -78,6 +82,18 @@ export namespace AccountActions {
 }
 
 interface AccountData {
+    readonly uid: string;
     readonly email: string;
+}
+
+interface StripeCancelSubscriptionBody extends AccountData {
     readonly uid: string;
+    readonly email: string;
+    readonly mode: StripeMode;
+}
+
+interface StripeChangePlanBody extends AccountData {
+    readonly plan: Billing.PlanLike;
+    readonly interval: Billing.Interval;
+    readonly mode: StripeMode;
 }
diff --git a/web/js/annotation_sidebar/AnnotationMutationsContext.tsx b/web/js/annotation_sidebar/AnnotationMutationsContext.tsx
index 39051b840..3ecb0ba97 100644
--- a/web/js/annotation_sidebar/AnnotationMutationsContext.tsx
+++ b/web/js/annotation_sidebar/AnnotationMutationsContext.tsx
@@ -568,7 +568,7 @@ export namespace AnnotationMutationCallbacks {
 
             return React.useCallback(() => {
                 onDeleted(mutation);
-            }, []);
+            }, [mutation]);
 
         }
 
@@ -684,7 +684,7 @@ export namespace AnnotationMutationCallbacks {
 
                 onComment([holder]);
 
-            }, []);
+            }, [annotation]);
 
         }
 
@@ -706,7 +706,7 @@ export namespace AnnotationMutationCallbacks {
 
                 onFlashcard([holder]);
 
-            }, []);
+            }, [annotation]);
 
         }
 
@@ -721,7 +721,7 @@ export namespace AnnotationMutationCallbacks {
 
             return React.useCallback((mutation: IColorMutation) => {
                 onColor({...selected, ...mutation});
-            }, []);
+            }, [selected]);
 
         }
 
diff --git a/web/js/annotation_sidebar/child_annotations/flashcards/flashcard_input/FlashcardInputForCloze.tsx b/web/js/annotation_sidebar/child_annotations/flashcards/flashcard_input/FlashcardInputForCloze.tsx
index 60bed7d11..3f1dcb6ad 100644
--- a/web/js/annotation_sidebar/child_annotations/flashcards/flashcard_input/FlashcardInputForCloze.tsx
+++ b/web/js/annotation_sidebar/child_annotations/flashcards/flashcard_input/FlashcardInputForCloze.tsx
@@ -15,6 +15,7 @@ import {FlashcardStyles} from './FlashcardStyles';
 import Tooltip from "@material-ui/core/Tooltip";
 import IconButton from '@material-ui/core/IconButton';
 import {ClozeDeletions} from "./ClozeDeletions";
+import {MUITooltip} from "../../../../mui/MUITooltip";
 
 export class FlashcardInputForCloze extends React.Component<IProps, IState> {
 
@@ -69,13 +70,13 @@ export class FlashcardInputForCloze extends React.Component<IProps, IState> {
 
                     <div style={FlashcardStyles.BottomBarItem} className="ml-1">
 
-                        <Tooltip title="Create cloze deletion for text">
+                        <MUITooltip title="Create cloze deletion for text">
 
                             <IconButton id={`button-${this.props.id}`}
                                         onClick={() => this.onClozeDelete()}>
                                 […]
                             </IconButton>
-                        </Tooltip>
+                        </MUITooltip>
 
                     </div>
 
diff --git a/web/js/apps/repository/RepositoryApp.tsx b/web/js/apps/repository/RepositoryApp.tsx
index d23cb9847..165527d84 100644
--- a/web/js/apps/repository/RepositoryApp.tsx
+++ b/web/js/apps/repository/RepositoryApp.tsx
@@ -8,7 +8,7 @@ import {RepoDocMetaLoader} from '../../../../apps/repository/js/RepoDocMetaLoade
 import WhatsNewScreen
     from '../../../../apps/repository/js/whats_new/WhatsNewScreen';
 import {StatsScreen} from '../../../../apps/repository/js/stats/StatsScreen';
-import {PremiumScreen} from '../../../../apps/repository/js/premium/PremiumScreen';
+import {PricingScreen} from '../../../../apps/repository/js/premium/PricingScreen';
 import {SupportScreen} from '../../../../apps/repository/js/support/SupportScreen';
 import {AuthRequired} from "../../../../apps/repository/js/AuthRequired";
 import {
@@ -55,6 +55,7 @@ import {UseLocationChangeRoot} from "../../../../apps/doc/src/annotations/UseLoc
 import {deepMemo} from "../../react/ReactUtils";
 import { PHZMigrationScreen } from './migrations/PHZMigrationScreen';
 import { AddFileDropzoneRoot } from './upload/AddFileDropzoneRoot';
+import {TwoMigrationForBrowser} from "../../../../apps/repository/js/gateways/two_migration/TwoMigrationForBrowser";
 
 interface IProps {
     readonly app: App;
@@ -109,13 +110,15 @@ export const RepositoryApp = (props: IProps) => {
                                      repoDocMetaManager={repoDocMetaManager}
                                      repoDocMetaLoader={repoDocMetaLoader}
                                      persistenceLayerManager={persistenceLayerManager}
-                                     render={(docRepo) =>
+                                     render={() =>
                                          <DocRepoStore2>
                                              <DocRepoSidebarTagStore>
-                                                 <>
-                                                     <AnkiSyncController/>
-                                                     <DocRepoScreen2/>
-                                                 </>
+                                                 <TwoMigrationForBrowser>
+                                                     <>
+                                                         <AnkiSyncController/>
+                                                         <DocRepoScreen2/>
+                                                     </>
+                                                 </TwoMigrationForBrowser>
                                              </DocRepoSidebarTagStore>
                                          </DocRepoStore2>
                                      }/>
@@ -223,13 +226,13 @@ export const RepositoryApp = (props: IProps) => {
 
     const premiumScreen = () => {
         return (
-            <PremiumScreen/>
+            <PricingScreen/>
         );
     };
 
     const premiumScreenYear = () => {
         return (
-            <PremiumScreen/>
+            <PricingScreen/>
         );
     };
 
diff --git a/web/js/apps/repository/RepositoryRoot.tsx b/web/js/apps/repository/RepositoryRoot.tsx
index 60af33f1b..13f12fc8e 100644
--- a/web/js/apps/repository/RepositoryRoot.tsx
+++ b/web/js/apps/repository/RepositoryRoot.tsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import {TwoMigrationForElectron} from "../../../../apps/repository/js/gateways/two_migration/TwoMigrationForElectron";
 
 interface IProps {
     readonly children: React.ReactElement;
@@ -8,5 +9,10 @@ interface IProps {
  * Root components that are specific just to the Repository.
  */
 export const RepositoryRoot = React.memo((props: IProps) => {
-    return props.children;
+    return (
+        <TwoMigrationForElectron>
+            {props.children}
+        </TwoMigrationForElectron>
+    );
+
 });
diff --git a/web/js/apps/repository/connectivity/CloudOffline.tsx b/web/js/apps/repository/connectivity/CloudOffline.tsx
index 624ed3204..082ae5e38 100644
--- a/web/js/apps/repository/connectivity/CloudOffline.tsx
+++ b/web/js/apps/repository/connectivity/CloudOffline.tsx
@@ -2,11 +2,12 @@ import React from "react";
 import Tooltip from '@material-ui/core/Tooltip';
 import Icon from '@material-ui/core/Icon';
 import CloudOffIcon from '@material-ui/icons/CloudOff';
+import {MUITooltip} from "../../../mui/MUITooltip";
 
 export const CloudOffline = React.memo(() => (
-    <Tooltip title="You're currently offline and not connected to the cloud.">
+    <MUITooltip title="You're currently offline and not connected to the cloud.">
         <Icon>
             <CloudOffIcon/>
         </Icon>
-    </Tooltip>
+    </MUITooltip>
 ));
diff --git a/web/js/apps/repository/connectivity/DocumentSaved.tsx b/web/js/apps/repository/connectivity/DocumentSaved.tsx
index ee9eed094..1a98ca477 100644
--- a/web/js/apps/repository/connectivity/DocumentSaved.tsx
+++ b/web/js/apps/repository/connectivity/DocumentSaved.tsx
@@ -3,14 +3,15 @@ import CloudDoneIcon from '@material-ui/icons/CloudDone';
 import Tooltip from '@material-ui/core/Tooltip';
 import Icon from '@material-ui/core/Icon';
 import useTheme from '@material-ui/core/styles/useTheme';
+import {MUITooltip} from "../../../mui/MUITooltip";
 
 export const DocumentSaved = React.memo(() => {
     const theme = useTheme();
     return (
-        <Tooltip title="Document fully written to the the cloud..">
+        <MUITooltip title="Document fully written to the the cloud..">
             <Icon style={{color: theme.palette.text.secondary}}>
                 <CloudDoneIcon/>
             </Icon>
-        </Tooltip>
+        </MUITooltip>
     );
 });
diff --git a/web/js/apps/repository/connectivity/DocumentSaving.tsx b/web/js/apps/repository/connectivity/DocumentSaving.tsx
index 6379b51c9..1059c5f7c 100644
--- a/web/js/apps/repository/connectivity/DocumentSaving.tsx
+++ b/web/js/apps/repository/connectivity/DocumentSaving.tsx
@@ -3,14 +3,15 @@ import CloudUploadIcon from '@material-ui/icons/CloudUpload';
 import Tooltip from '@material-ui/core/Tooltip';
 import Icon from '@material-ui/core/Icon';
 import useTheme from '@material-ui/core/styles/useTheme';
+import {MUITooltip} from "../../../mui/MUITooltip";
 
 export const DocumentSaving = React.memo(() => {
     const theme = useTheme();
     return (
-        <Tooltip title="Document being saved to the cloud and will be written upon reconnect.">
+        <MUITooltip title="Document being saved to the cloud and will be written upon reconnect.">
             <Icon style={{color: theme.palette.text.secondary}}>
                 <CloudUploadIcon/>
             </Icon>
-        </Tooltip>
+        </MUITooltip>
     );
 });
diff --git a/web/js/apps/sync/framework/anki/AnkiConnectFetch.ts b/web/js/apps/sync/framework/anki/AnkiConnectFetch.ts
index ca5fe61f5..cbd7382e1 100644
--- a/web/js/apps/sync/framework/anki/AnkiConnectFetch.ts
+++ b/web/js/apps/sync/framework/anki/AnkiConnectFetch.ts
@@ -41,7 +41,7 @@ export class AnkiConnectFetch {
 
             }
 
-            const msg = `Unable to connect to anki with ports ${this.PORTS} (make sure Polar Connect is installed)`;
+            const msg = `Unable to connect to anki with ports ${this.PORTS} (make sure Anki Connect is installed)`;
             log.error(msg);
             throw new Error(msg);
 
@@ -82,7 +82,7 @@ export class AnkiConnectFetch {
 
             return result.result;
         } catch (e) {
-            log.warn("Anki connect fetch failed (install Polar Connect or Anki Connect): ", e);
+            log.warn("Anki connect fetch failed (install Anki Connect): ", e);
             throw e;
         }
 
diff --git a/web/js/datastore/Datastore.ts b/web/js/datastore/Datastore.ts
index c9625c33c..de344d161 100644
--- a/web/js/datastore/Datastore.ts
+++ b/web/js/datastore/Datastore.ts
@@ -1031,7 +1031,10 @@ export abstract class AbstractPrefsProvider implements PrefsProvider {
 
         this.reactor.addEventListener(eventListener);
 
-        handleOnNext(this.createInterceptedPersistentPrefs(this.get()));
+        // WARN: we used to send the current copy of the prefs but this is wrong.  This would only work for a store
+        // that didn't have the concept of snapshots (like our old DiskDatastore) but with Firestore we don't have
+        // any data until we receive the FIRST snapshot
+        // handleOnNext(this.createInterceptedPersistentPrefs(this.get()));
 
         return () => {
             this.reactor.removeEventListener(eventListener);
diff --git a/web/js/mui/MUIAppRoot.tsx b/web/js/mui/MUIAppRoot.tsx
index 1e470383d..44ffcd79c 100644
--- a/web/js/mui/MUIAppRoot.tsx
+++ b/web/js/mui/MUIAppRoot.tsx
@@ -27,7 +27,6 @@ export const MUIAppRoot = (props: IProps) => {
         palette: {
             type: theme,
             primary: {
-                // main: 'rgb(135, 141, 246)'
                 main: 'rgb(103, 84, 214)'
             }
         }
diff --git a/web/js/mui/MUIGapBox.tsx b/web/js/mui/MUIGapBox.tsx
new file mode 100644
index 000000000..82b5a6f28
--- /dev/null
+++ b/web/js/mui/MUIGapBox.tsx
@@ -0,0 +1,41 @@
+import * as React from "react";
+import clsx from "clsx";
+import {deepMemo} from "../react/ReactUtils";
+import makeStyles from "@material-ui/core/styles/makeStyles";
+import createStyles from "@material-ui/core/styles/createStyles";
+
+const useStyles = makeStyles((theme) =>
+    createStyles({
+        root: {
+            display: 'flex',
+            alignItems: 'center',
+            flexWrap: 'nowrap',
+
+            "& > *": {
+                marginLeft: '5px'
+            },
+
+            "& > *:first-child": {
+                marginLeft: 0
+            }
+
+        },
+    }),
+);
+
+interface IProps {
+    readonly children: React.ReactNode;
+    readonly style?: React.CSSProperties;
+    readonly className?: string;
+}
+
+export const MUIGapBox = deepMemo((props: IProps) => {
+
+    const classes = useStyles();
+
+    return (
+        <div className={classes.root}>
+            {props.children}
+        </div>
+    );
+});
diff --git a/web/js/mui/MUITooltip.tsx b/web/js/mui/MUITooltip.tsx
new file mode 100644
index 000000000..45cc5ddca
--- /dev/null
+++ b/web/js/mui/MUITooltip.tsx
@@ -0,0 +1,26 @@
+import * as React from 'react';
+import Tooltip from '@material-ui/core/Tooltip';
+
+interface IProps {
+    /**
+     * If the tooltip isn't specified we don't use a tooltip.
+     */
+    readonly title?: string;
+    readonly children: React.ReactElement;
+}
+
+export const MUITooltip = React.memo((props: IProps) => {
+
+    if (props.title === undefined) {
+        return props.children;
+    }
+
+    return (
+        <Tooltip title={props.title}
+                 enterDelay={750}
+                 leaveDelay={200}>
+            {props.children}
+        </Tooltip>
+    );
+
+});
\ No newline at end of file
diff --git a/web/js/mui/css/GlobalCss.tsx b/web/js/mui/css/GlobalCss.tsx
index b32bb22dc..386848574 100644
--- a/web/js/mui/css/GlobalCss.tsx
+++ b/web/js/mui/css/GlobalCss.tsx
@@ -18,8 +18,10 @@ export const GlobalCssDarkStyles = withStyles(() => {
             ...darkModeScrollbars,
 
             // You should target [class*="MuiButton-root"] instead if you nest themes.
-            '.MuiTooltip-root': {
-                // fontSize: '1rem',
+
+            '.MuiTooltip-tooltip': {
+                fontSize: '1.1rem',
+                backgroundColor: theme.palette.background.default
             },
 
             // **** CSS link colors
diff --git a/web/js/ui/MUIToggleButton.tsx b/web/js/ui/MUIToggleButton.tsx
index ef1ece23d..6efe58139 100644
--- a/web/js/ui/MUIToggleButton.tsx
+++ b/web/js/ui/MUIToggleButton.tsx
@@ -4,6 +4,7 @@ import CheckIcon from '@material-ui/icons/Check';
 import {createStyles, makeStyles, Theme} from "@material-ui/core/styles";
 import { DeviceRouters } from './DeviceRouter';
 import isEqual from 'react-fast-compare';
+import {MUITooltip} from "../mui/MUITooltip";
 
 const useStyles = makeStyles((theme: Theme) =>
     createStyles({
@@ -30,9 +31,10 @@ interface IProps {
     readonly icon?: JSX.Element;
     readonly onChange: (value: boolean) => void;
     readonly size?: 'small' | 'medium' | 'large';
+    readonly tooltip?: string;
 }
 
-export const MUIToggleButton = React.memo(React.forwardRef((props: IProps, ref) => {
+export const MUIToggleButton = React.memo((props: IProps) => {
 
     const classes = useStyles();
 
@@ -47,37 +49,29 @@ export const MUIToggleButton = React.memo(React.forwardRef((props: IProps, ref)
     const size = props.size || 'medium';
     const icon = props.icon || <CheckIcon/>;
 
-    // return (
-    //     <Chip id={props.id}
-    //           variant={active ? 'default' : 'outlined'}
-    //           color={active ? 'primary' : 'default'}
-    //           onClick={handleToggle}
-    //           label={props.label}
-    //           icon={icon} />
-    // );
-
-    //
     return (
 
-        <Button id={props.id}
-                startIcon={icon}
-                className={active ? classes.buttonActive : classes.button}
-                onClick={handleToggle}
-                variant={active ? "contained" : "outlined"}
-                disableFocusRipple
-                disableRipple
-                size={size}>
-
-            <DeviceRouters.NotPhone>
-                <>
-                    {props.label}
-                </>
-            </DeviceRouters.NotPhone>
-
-        </Button>
+        <MUITooltip title={props.tooltip}>
+            <Button id={props.id}
+                    startIcon={icon}
+                    className={active ? classes.buttonActive : classes.button}
+                    onClick={handleToggle}
+                    variant={active ? "contained" : "outlined"}
+                    disableFocusRipple
+                    disableRipple
+                    size={size}>
+
+                <DeviceRouters.NotPhone>
+                    <>
+                        {props.label}
+                    </>
+                </DeviceRouters.NotPhone>
+
+            </Button>
+        </MUITooltip>
 
     );
 
-}), isEqual);
+}, isEqual);
 
 
diff --git a/web/js/ui/data_loader/UseSnapshotSubscriber.tsx b/web/js/ui/data_loader/UseSnapshotSubscriber.tsx
index 7a63bbf6f..d12dee4f7 100644
--- a/web/js/ui/data_loader/UseSnapshotSubscriber.tsx
+++ b/web/js/ui/data_loader/UseSnapshotSubscriber.tsx
@@ -37,6 +37,8 @@ export function useSnapshotSubscriberUsingCallbacks<T>(subscriber: SnapshotSubsc
 
     if (! unsubscriberRef.current) {
 
+        console.log("FIXME9 : subscribing: ");
+
         const unsubscriber = subscriber.subscribe(onNext, onError);
 
         if ( ! isPresent(unsubscriber)) {
@@ -73,6 +75,7 @@ export function useSnapshotSubscriber<T>(subscriber: SnapshotSubscriberWithID<T>
     });
 
     function onNext(value: T | undefined) {
+        console.log("FIXME11: onNext: ", value)
         setState({value, error: undefined});
     }
 
diff --git a/web/js/ui/util/NavHook.tsx b/web/js/ui/util/NavHook.tsx
index 5e705cb46..2d0c885b0 100644
--- a/web/js/ui/util/NavHook.tsx
+++ b/web/js/ui/util/NavHook.tsx
@@ -1,5 +1,7 @@
 import {useHistory} from 'react-router-dom';
 import {Devices} from "polar-shared/src/util/Devices";
+import {AppRuntime} from "polar-shared/src/util/AppRuntime";
+import isElectron = AppRuntime.isElectron;
 
 interface ILocation {
     readonly hash?: string;
@@ -64,8 +66,11 @@ function createDesktopLinkLoader(): LinkLoaderDelegate {
     return (location: ILocationOrLink, opts: LinkLoaderOpts) => {
 
         function createWindow() {
-            console.log("Creating new window");
-            return window.open('', '_blank');
+
+            const initialURL = isElectron() && typeof location === 'string' ? location : '';
+
+            console.log("Creating new window: " + initialURL);
+            return window.open(initialURL, '_blank');
         }
 
         const win = opts.newWindow ? createWindow() : window;
@@ -93,14 +98,16 @@ function createDesktopLinkLoader(): LinkLoaderDelegate {
 
         console.log("Setting window location to: ", location);
 
-        if (typeof location === 'string') {
-            win.location.href = location;
-        } else if (location.hash) {
-            // TODO I think this is wrong as nothing is loaded yet.
-            win.location.hash = location.hash;
-        } else if (location.pathname) {
-            // TODO I think this is wrong as nothing is loaded yet.
-            win.location.href = location.pathname;
+        if (! isElectron()) {
+            if (typeof location === 'string') {
+                win.location.href = location;
+            } else if (location.hash) {
+                // TODO I think this is wrong as nothing is loaded yet.
+                win.location.hash = location.hash;
+            } else if (location.pathname) {
+                // TODO I think this is wrong as nothing is loaded yet.
+                win.location.href = location.pathname;
+            }
         }
 
     }
diff --git a/webpack.config.js b/webpack.config.js
index 89586ee67..cbca34520 100644
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -8,6 +8,7 @@ const os = require('os');
 const fs = require('fs');
 const CopyPlugin = require('copy-webpack-plugin');
 const {DefaultRewrites} = require('polar-backend-shared/src/webserver/DefaultRewrites');
+const svgToMiniDataURI = require('mini-svg-data-uri');
 
 const isDevServer = process.env.WEBPACK_DEV_SERVER;
 const mode = process.env.NODE_ENV || (isDevServer ? 'development' : 'production');
@@ -78,9 +79,7 @@ function createRules() {
 
         },
         {
-            // all image and font assets including SVG, TTFs and an optional
-            // v=xxx identifier at the end if we want to use one.
-            test: /\.(png|jpe?g|gif|bmp|svg|ico|webp|woff(2)?|ttf|eot)(\?v=\d+\.\d+\.\d+)?$/i,
+            test: /\.(png|jpe?g|gif|bmp|ico|webp|woff(2)?|ttf|eot)(\?v=\d+\.\d+\.\d+)?$/i,
             use: [
                 {
                     loader: 'file-loader',
@@ -92,6 +91,19 @@ function createRules() {
                 },
             ],
         },
+        {
+            // make SVGs use data URLs.
+            test: /\.(svg)(\?v=\d+\.\d+\.\d+)?$/i,
+            use: [
+                {
+                    loader: 'url-loader',
+                    options: {
+                        limit: 32768,
+                        generator: (content) => svgToMiniDataURI(content.toString()),
+                    }
+                },
+            ],
+        },
         {
             test: /\.css$/i,
             use: [
